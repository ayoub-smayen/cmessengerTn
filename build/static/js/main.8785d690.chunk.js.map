{"version":3,"sources":["message.ogg","utils/helpers.js","components/Auth/SignUp.js","components/Auth/Login.js","reducers/actions.js","reducers/Reducer.js","store/Store.js","utils/socket.js","components/Sidebars/LeftSidebar/Search.js","utils/ScrollBar.js","components/Sidebars/LeftSidebar/Dialogs/CreateUpdate.js","components/Sidebars/LeftSidebar/Dialogs/Remove.js","components/Sidebars/LeftSidebar/LeftButtons.js","components/Sidebars/LeftSidebar/Dialogs/PasswordCheck.js","components/Helpers/Preloader.js","components/Sidebars/LeftSidebar/LeftSidebar.js","components/Sidebars/RightSidebar/Dialogs/ExitDialog.js","components/Sidebars/RightSidebar/Dialogs/Profile.js","components/Sidebars/RightSidebar/RightButtons.js","components/Sidebars/RightSidebar/Dialogs/UserInfo.js","components/Sidebars/RightSidebar/Dialogs/BannedUser.js","components/Sidebars/RightSidebar/Users.js","components/Sidebars/RightSidebar/RightSidebar.js","components/ChatBox/MessageItem.js","components/ChatBox/BackgroundAnimation.js","components/ChatBox/MessageFrame.js","components/Helpers/Notification.js","components/ChatBox/Input.js","components/ChatBox/ChatBox.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","email_validate_pattern","checkToken","token","localStorage","getItem","window","location","reload","removeToken","removeItem","Alert","props","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","paper","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignUp","classes","useState","fullName","setFullName","fullNameError","setFullNameError","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","passwordConfirmation","setPasswordConfirmation","passwordConfirmationError","setPasswordConfirmationError","serverError","setServerError","registerSuccesss","setRegisterSuccess","redirect","setRedirect","useEffect","setTimeout","signupFormHandler","e","preventDefault","validateForm","registerUser","a","axios","post","status","errorMessage","response","data","errors","map","el","id","push","msg","message","hasErrors","emailTest","test","String","toLowerCase","length","result","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","onSubmit","Grid","container","severity","idx","key","item","xs","TextField","autoComplete","name","required","fullWidth","label","value","autoFocus","onChange","target","type","Button","color","onClick","justify","to","height","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","SignInSide","loginSuccessFull","setloginSuccessFull","loginFormHandler","loginUser","fetchResponse","setItem","sm","md","Paper","square","href","actions","Reducer","state","action","rooms","payload","leftSidebar","rightSidebar","logged","currentRoom","oldRooms","findIndex","x","_id","updatedRooms","updateArrayIndex","arrayIndex","splice","roomUsers","currentUsersList","currentUserArrayIndex","currentUser","usersList","userArrayIndex","currentUserObj","initialState","activeUsers","messages","error","Context","createContext","Store","children","useReducer","dispatch","Provider","socket","io","process","padding","input","marginLeft","flex","iconButton","divider","Search","IconButton","aria-label","InputBase","placeholder","placeholderText","inputProps","val","handler","SpringScrollbars","scrollbars","React","createRef","mounted","this","setState","scrolltobottom","current","scrollToBottom","ref","Component","CreateUpdate","open","headline","saveHeadline","roomName","setRoomName","topic","roomTopic","setRoomTopic","roomPassword","setRoomPassword","handleClose","closeDialog","newRoomHandler","room","roomID","replace","emit","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","RemoveDialog","useContext","aria-describedby","DialogContentText","defaultRoom","fab","absolute","position","bottom","right","customButtons","LeftButtons","createDialog","openCreateDialog","updateDialog","openUpdateDialog","deleteDialog","openDeleteDialog","Tooltip","title","REACT_APP_GUEST_ROOM_ID","PasswordCheck","authorFullName","passRoom","wrongPass","setWrongPass","socketOnListeners","on","disconnect","changeRoomHandler","author","useStylesFacebook","left","bottomLeft","top","animationDuration","topLeft","circle","strokeLinecap","Preloader","CircularProgress","showonleft","size","thickness","disableShrink","flexGrow","CustomizedProgressBars","background","LeftSidebar","setRooms","SearchRooms","setSearchRooms","setCurrentRoom","setPassRoom","showPassDialog","openPassDialog","roomsList","roomHandler","newRoom","protected","arr_key","selectedKey","ListItem","button","selected","ListItemIcon","ListItemText","primary","newRooms","filter","search","autoHide","style","List","ExitDialog","loggedUserFullName","Profile","setAvatar","newPassword","setNewPassword","preloaderCondition","showPreloader","profileDataHandler","RightButtons","exitDialog","openExitDialog","fullname","userData","setOpen","UserInfo","openBox","alt","src","user","BannedUser","table","minWidth","chatSection","paddingTop","headBG","borderRight500","borderRight","messageArea","overflowY","Chat","users","setUsers","searchUsers","setSearchUsers","userID","setUserID","currentUserID","serCurrentUserID","setUserData","bannedDialog","showBannedDialog","onbeforeunload","banUser","banned","currentRoomUsers","userHandler","clickedUser","Divider","RightSidebar","Users","MessageItem","messageBox","attachment","sender","direction","date","moment","format","msg_attachment","rel","Slide","in","mountOnEnter","unmountOnExit","align","marginBottom","justifyContent","BackgroundAnimation","MessageFrame","Audio","message_sound","audio","setMessages","playing","setPlaying","currentMessage","setCurrentMessage","play","pause","currentTime","indexOf","renderTrackHorizontal","renderThumbHorizontal","renderView","userIndex","close","Notification","messageInfo","setMessageInfo","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","undefined","Fragment","messageForm","Input","setMessage","file","setFile","preview","setPreview","emoji","showEmoji","textInput","useRef","openSuggestions","setOpenSuggestions","show","errorNotification","setErrorNotification","submitHandler","text","FormData","append","then","res","filename","onSend","catch","addUsername","lastAtPosition","lastIndexOf","modifiedMessage","slice","focus","userSuggestionsList","noValidate","set","showPreview","showSkinTones","onSelect","sym","unified","split","codesArray","forEach","fromCodePoint","inputRef","lastLetter","userString","accept","files","reader","FileReader","readAsDataURL","onloadend","ev","handleImageChange","ChatBox","textAlign","Main","notificationEnabled","showNotification","messageFrameColumns","leftSidebarColumns","rightSidebarColumns","App","userToken","path","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,qC,iVCA9BC,EAAyB,0JAEzBC,EAAa,WACtB,IAAMC,EAAQC,aAAaC,QAAQ,iBACnC,OAAKF,GAAcG,OAAOC,SAASC,QAAO,IAIjCC,EAAc,WAGvB,OAFcL,aAAaC,QAAQ,kBACxBD,aAAaM,WAAW,iBAC5BJ,OAAOC,SAASC,QAAO,ICKlC,SAASG,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAKtD,IAAMG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,KAG7BC,MAAO,CACLF,UAAWH,EAAMI,QAAQ,GACzBE,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQV,EAAMI,QAAQ,GACtBO,gBAAiBX,EAAMY,QAAQC,UAAUC,MAE3CC,KAAM,CACJb,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BY,OAAQ,CACNN,OAAQV,EAAMI,QAAQ,EAAG,EAAG,QAIjB,SAASa,EAAOtB,GAC7B,IAAMuB,EAAUpB,IAEhB,EAAgCqB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA0CV,mBAAS,IAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAAwDZ,mBAAS,IAAjE,mBAAOa,EAAP,KAA6BC,EAA7B,KACA,EAAkEd,mBAAS,IAA3E,mBAAOe,EAAP,KAAkCC,EAAlC,KACA,EAAsChB,mBAAS,IAA/C,oBAAOiB,GAAP,MAAoBC,GAApB,MACA,GAA+ClB,oBAAS,GAAxD,qBAAOmB,GAAP,MAAyBC,GAAzB,MACA,GAAgCpB,oBAAS,GAAzC,qBAAOqB,GAAP,MAAiBC,GAAjB,MAEAC,qBAAU,WACLJ,IACDK,YAAW,WACTF,IAAY,KACX,OAEJ,CAACH,KAEJ,IAAMM,GAAoB,SAACC,GACzBA,EAAEC,iBACoBC,MAEpBC,MAIEA,GAAY,uCAAG,4BAAAC,EAAA,+EAEaC,IAAMC,KAAN,UAAsB,CAC9C/B,WACAI,QACAI,aALW,cAOe,MAPf,OAOIwB,QACfb,IAAmB,GARR,mBAUR,GAVQ,uCAYXc,EAAe,GACf,KAAEC,SAASC,KACT,KAAED,SAASC,KAAKC,OAClB,KAAEF,SAASC,KAAKC,OAAOC,KAAI,SAACC,EAAIC,GAC9BN,EAAaO,KAAKF,EAAGG,QAGvBR,EAAaO,KAAK,KAAEN,SAASC,KAAKO,SAGpCT,EAAaO,KAAK,6CAEpBvB,GAAegB,GAxBA,mBAyBR,GAzBQ,yDAAH,qDA8BZN,GAAe,WACnBV,GAAe,IACfd,EAAiB,IACjBI,EAAc,IACdI,EAAiB,IACjBI,EAA6B,IAC7B,IAAI4B,GAAY,EACVC,EAAYhF,EAAuBiF,KAAKC,OAAO1C,GAAO2C,eA8B5D,OA5BI/C,IACF2C,GAAY,EACZxC,EAAiB,iCAEfC,EAIKwC,IACPD,GAAY,EACZpC,EAAc,yBALdoC,GAAY,EACZpC,EAAc,0BAMZC,EAIIA,IAAaI,GACnB+B,GAAY,EACZhC,EAAiB,8DAEXH,EAASwC,OAAS,GAAKpC,EAAqBoC,OAAS,KAC3DL,GAAY,EACZhC,EAAiB,kFATjBgC,GAAY,EACZhC,EAAiB,6BAUfC,IACF+B,GAAY,EACZ5B,EAA6B,2CAE5B4B,GAMDM,GACF,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWxD,EAAQb,OACtB,kBAACsE,EAAA,EAAD,CAAQD,UAAWxD,EAAQT,QACzB,kBAAC,IAAD,OAEF,kBAACmE,EAAA,EAAD,CAAYL,UAAU,KAAK1E,QAAQ,MAAnC,WAGA,0BAAM6E,UAAWxD,EAAQH,KAAM8D,SAAUjC,IACvC,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAAC3E,QAAS,GACvB,yBAAKsE,UAAU,iBACZpD,EACC,kBAAC,EAAD,CAAOoD,UAAU,gBAAgBM,SAAS,SACrC1D,GACM,KACZI,EACC,kBAAC,EAAD,CAAOgD,UAAU,gBAAgBM,SAAS,SACrCtD,GACM,KACZI,EACC,kBAAC,EAAD,CAAO4C,UAAU,gBAAgBM,SAAS,SACrClD,GACM,KACZI,EACC,kBAAC,EAAD,CAAOwC,UAAU,gBAAgBM,SAAS,SACrC9C,GACM,KACZE,GAAYgC,OAAS,EACpBhC,GAAYqB,KAAI,SAACK,EAAQmB,GACvB,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAKP,UAAU,gBAAgBM,SAAS,SAASlB,MAEtE,MAEJ,yBAAKY,UAAU,kBACZpC,GACC,kBAAC,EAAD,CAAOoC,UAAU,kBAAkBM,SAAS,WAA5C,uEAEW,MAEf,kBAACF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEC,aAAa,QACbC,KAAK,YACL1F,QAAQ,WACR2F,UAAQ,EACRC,WAAS,EACT9B,GAAG,YACH+B,MAAM,YACNC,MAAOvE,EACPwE,WAAS,EACTC,SAAU,SAAChD,GAAD,OAAOxB,EAAYwB,EAAEiD,OAAOH,WAG1C,kBAACb,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACExF,QAAQ,WACR2F,UAAQ,EACRC,WAAS,EACT9B,GAAG,QACH+B,MAAM,gBACNH,KAAK,QACLQ,KAAK,QACLJ,MAAOnE,EACPqE,SAAU,SAAChD,GAAD,OAAOpB,EAASoB,EAAEiD,OAAOH,WAGvC,kBAACb,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACExF,QAAQ,WACR2F,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLG,MAAM,WACNK,KAAK,WACLpC,GAAG,WACHgC,MAAO/D,EACPiE,SAAU,SAAChD,GAAD,OAAOhB,EAAYgB,EAAEiD,OAAOH,WAG1C,kBAACb,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACExF,QAAQ,WACR2F,UAAQ,EACRC,WAAS,EACTF,KAAK,kBACLG,MAAM,kBACNK,KAAK,WACLpC,GAAG,kBACHgC,MAAO3D,EACP6D,SAAU,SAAChD,GAAD,OAAOZ,EAAwBY,EAAEiD,OAAOH,YAIxD,kBAACK,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACT5F,QAAQ,YACRoG,MAAM,UACNC,QAAStD,GACT8B,UAAWxD,EAAQF,QANrB,WAUA,kBAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACoB,QAAQ,YACtB,kBAACrB,EAAA,EAAD,CAAMK,MAAI,GACR,kBAAC,IAAD,CAAMiB,GAAG,SAASvG,QAAQ,SAA1B,yCAYZ,OAFG2C,KAAU6B,GAAS,kBAAC,IAAD,CAAU+B,GAAG,YAE5B/B,G,aC9PT,SAAS3E,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGtD,IAAMG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoG,OAAQ,QACRnG,MAAO,OAEP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,KAG7BkG,MAAO,CACLC,gBAAiB,0CACjBC,iBAAkB,YAClB7F,gBACyB,UAAvBX,EAAMY,QAAQmF,KAAmB/F,EAAMY,QAAQ6F,KAAK,IAAMzG,EAAMY,QAAQ6F,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtBtG,MAAO,CACLK,OAAQV,EAAMI,QAAQ,EAAG,GACzBE,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQV,EAAMI,QAAQ,GACtBO,gBAAiBX,EAAMY,QAAQC,UAAUC,MAE3CC,KAAM,CACJb,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BY,OAAQ,CACNN,OAAQV,EAAMI,QAAQ,EAAG,EAAG,QAIjB,SAASwG,IACtB,IAAM1F,EAAUpB,IAChB,EAA0BqB,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA0CV,mBAAS,IAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAAsCZ,mBAAS,IAA/C,mBAAOiB,EAAP,KAAoBC,EAApB,KACA,EAAgDlB,oBAAS,GAAzD,mBAAO0F,EAAP,KAAyBC,EAAzB,KACA,EAAgC3F,oBAAS,GAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACLmE,GACDlE,YAAW,WACTF,GAAY,KACX,OAEJ,CAACoE,IAEJ,IAAME,EAAmB,SAAClE,GACxBA,EAAEC,iBACoBC,KAEpBiE,KAIEjE,EAAe,WACnBV,EAAe,IACfV,EAAc,IACdI,EAAiB,IACjB,IAAIgC,GAAY,EACVC,EAAYhF,EAAuBiF,KAAKC,OAAO1C,GAAO2C,eAe5D,OAbI3C,EAIKwC,IACPD,GAAY,EACZpC,EAAc,yBALdoC,GAAY,EACZpC,EAAc,0BAMZC,IACFmC,GAAY,EACZhC,EAAiB,8BAGhBgC,GAICiD,EAAS,uCAAG,gCAAA/D,EAAA,+EAEgBC,IAAMC,KAAN,SAAqB,CAC7C3B,QACAI,aAJQ,cAMkB,OAJxBqF,EAFM,QAMO7D,SACf0D,GAAoB,GACd5H,EAAQ+H,EAAc1D,KAAKrE,MACjCC,aAAa+H,QAAQ,gBAAiBhI,IAT9B,mBAWL,GAXK,uCAaRmE,EAAe,GACf,KAAEC,SAASC,KACV,KAAED,SAASC,KAAKC,OACjB,KAAEF,SAASC,KAAKC,OAAOC,KAAI,SAACC,EAAIC,GAC9BN,EAAaO,KAAKF,EAAGG,QAIvBR,EAAaO,KAAK,KAAEN,SAASC,KAAKO,SAIpCT,EAAaO,KAAK,6CAEpBvB,EAAegB,GA3BH,mBA4BL,GA5BK,yDAAH,qDAmCbgB,EACA,kBAACS,EAAA,EAAD,CAAMC,WAAS,EAACR,UAAU,OAAOG,UAAWxD,EAAQjB,MAClD,kBAACwE,EAAA,EAAD,MACA,kBAACK,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAI,EAAO+B,GAAI,EAAGC,GAAI,EAAG1C,UAAWxD,EAAQoF,QACvD,kBAACxB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAI+B,GAAI,EAAGC,GAAI,EAAG7C,UAAW8C,IAAOzH,UAAW,EAAG0H,QAAM,GACrE,yBAAK5C,UAAWxD,EAAQb,OACtB,kBAACsE,EAAA,EAAD,CAAQD,UAAWxD,EAAQT,QACzB,kBAAC,IAAD,OAEF,kBAACmE,EAAA,EAAD,CAAYL,UAAU,KAAK1E,QAAQ,MAAnC,WAGA,0BAAM6E,UAAWxD,EAAQH,KAAM8D,SAAUkC,GACvC,yBAAKrC,UAAU,gBACZhD,EACC,kBAAC,EAAD,CAAOgD,UAAU,gBAAgBM,SAAS,SACrCtD,GACM,KACZI,EACC,kBAAC,EAAD,CAAO4C,UAAU,gBAAgBM,SAAS,SACrClD,GACM,KACZM,EAAYgC,OAAS,EACpBhC,EAAYqB,KAAI,SAACK,EAAQmB,GACvB,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAKP,UAAU,gBAAgBM,SAAS,SAASlB,MAEtE,KACD+C,EACC,kBAAC,EAAD,CAAOnC,UAAU,kBAAkBM,SAAS,WAA5C,4DAGA,MAEJ,kBAACK,EAAA,EAAD,CACExF,QAAQ,WACRa,OAAO,SACP8E,UAAQ,EACRC,WAAS,EACTM,KAAK,QACLJ,MAAOnE,EACPmC,GAAG,QACH+B,MAAM,gBACNH,KAAK,QACLD,aAAa,QACbO,SAAU,SAAChD,GAAD,OAAOpB,EAASoB,EAAEiD,OAAOH,QACnCC,WAAS,IAEX,kBAACP,EAAA,EAAD,CACExF,QAAQ,WACRa,OAAO,SACP8E,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLG,MAAM,WACNK,KAAK,WACLpC,GAAG,WACHgC,MAAO/D,EACPiE,SAAU,SAAChD,GAAD,OAAOhB,EAAYgB,EAAEiD,OAAOH,UAExC,kBAACK,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACT5F,QAAQ,YACRoG,MAAM,UACNC,QAASa,EACTrC,UAAWxD,EAAQF,QANrB,WAUA,kBAAC8D,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMK,MAAI,GACR,kBAAC,IAAD,CAAMiB,GAAG,UAAUvG,QAAQ,SACxB,oCAIP,kBAACiF,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMK,MAAI,GACR,yBAAKT,UAAU,eACb,uBAAG6C,KAAK,4CAA4CzB,OAAO,SAASpB,UAAU,eAA9E,iBACA,uBAAG6C,KAAK,6BAA6BzB,OAAO,SAASpB,UAAU,eAA/D,2BAYhB,OAFGlC,IAAU6B,EAAShF,OAAOC,SAASC,QAAO,IAEtC8E,E,oBC1OImD,EACG,aADHA,EAIC,WAJDA,EAKK,eALLA,EAMM,gBANNA,EAOK,eAPLA,EAQI,cARJA,EASI,cATJA,EAUI,cAVJA,EAWM,gBAXNA,EAYI,cAZJA,EAaU,oBAbVA,EAcY,sBAdZA,EAe0B,oCAf1BA,EAgBE,YAhBFA,EAiBU,oBCsFRC,EArGC,SAACC,EAAOC,GACpB,OAAQA,EAAO5B,MACX,KAAKyB,EACD,OAAO,2BACAE,GADP,IAEIE,MAAOD,EAAOE,UAEtB,KAAKL,EACD,OAAO,2BACAE,GADP,IAEII,YAAaH,EAAOE,UAE5B,KAAKL,EACD,OAAO,2BACAE,GADP,IAEIK,aAAcJ,EAAOE,UAE7B,KAAKL,EACD,OAAO,2BACAE,GADP,IAEIM,QAAQ,IAEhB,KAAKR,EACD,OAAO,2BACAE,GADP,IAEIM,QAAQ,IAEhB,KAAKR,EACD,OAAO,2BACAE,GADP,IAEIO,YAAaN,EAAOE,UAE5B,KAAKL,EACD,IAAMU,EAAQ,YAAOR,EAAME,OAE3B,OAAsB,IADDM,EAASC,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQV,EAAOE,QAAQQ,QAElEH,EAAStE,KAAK+D,EAAOE,SACd,2BACAH,GADP,IAEIE,MAAOM,KAGRR,EAEX,KAAKF,EACD,IAAMc,EAAY,YAAOZ,EAAME,OACzBW,EAAmBD,EAAaH,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQV,EAAOE,QAAQQ,OAE9E,OADAC,EAAaC,GAAoBZ,EAAOE,QACjC,2BACAH,GADP,IAEIE,MAAMU,IAEd,KAAKd,EACD,IAAMI,EAAK,YAAOF,EAAME,OAClBY,EAAaZ,EAAMO,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQV,EAAOE,WAEzD,OADAD,EAAMa,OAAOD,EAAY,GAClB,2BACAd,GADP,IAEIE,UAER,KAAKJ,EACD,OAAO,2BACAE,GADP,IAEIgB,UAAUf,EAAOE,UAEzB,KAAKL,EACD,IAAMmB,EAAgB,YAAOjB,EAAMgB,WAC7BE,EAAwBD,EAAiBR,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQV,EAAOE,QAAQQ,OAEvF,OADAM,EAAiBC,GAAyBjB,EAAOE,QAC1C,2BACAH,GADP,IAEIgB,UAAWC,IAEnB,KAAKnB,EACD,OAAO,2BACAE,GADP,IAEImB,YAAalB,EAAOE,UAE5B,KAAKL,EACD,IAAMsB,EAAS,YAAOpB,EAAMgB,WACtBK,EAAiBD,EAAUX,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQV,EAAOE,WAEjE,OADAiB,EAAUL,OAAOM,EAAgB,GAC1B,2BACArB,GADP,IAEIgB,UAAWI,IAEnB,KAAKtB,EACD,IAAMwB,EAAc,eAAOtB,EAAMmB,aAKjC,OAJAG,EAAexH,MAAQmG,EAAOE,QAAQrG,MACtCwH,EAAevI,OAASkH,EAAOE,QAAQpH,OACvCuI,EAAe5H,SAAWuG,EAAOE,QAAQzG,SAElC,2BACAsG,GADP,IAEImB,YAAaG,IAErB,QACI,OAAOtB,ICzFbuB,GAAe,CACjBnB,aAAY,EACZC,cAAa,EACbC,QAAO,EACPkB,YAAa,GACbtB,MAAO,GACPK,YAAa,KACbY,YAbgB,CAChBR,IAAI,IACJjH,SAAU,IACVI,MAAO,KAWPkH,UAAW,GACXS,SAAU,GACVC,MAAO,MAYEC,GAAUC,wBAAcL,IACtBM,GAVD,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACZ,EAA0BC,qBAAWhC,EAASwB,IAA9C,mBAAOvB,EAAP,KAAcgC,EAAd,KACA,OACI,kBAACL,GAAQM,SAAT,CAAkBhE,MAAO,CAAC+B,EAAOgC,IAC5BF,I,UCzBEI,G,OADAC,GAAGC,wBAAmC,CAAC,6BAA6B,I,yCCM7EhK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ8J,QAAS,IACTzJ,QAAS,OACTE,WAAY,SACZN,MAAO,QAET8J,MAAO,CACLC,WAAYjK,EAAMI,QAAQ,GAC1B8J,KAAM,EACNH,QAAQ,cAEVI,WAAY,CACVJ,QAAS,QAEXK,QAAS,CACP/D,OAAQ,GACR3F,OAAQ,OAIG,SAAS2J,GAAO1K,GAC7B,IAAMuB,EAAUpB,KAOhB,OACE,kBAACuH,EAAA,EAAD,CAAO9C,UAAU,MAAMG,UAAWxD,EAAQjB,MACxC,kBAACqK,GAAA,EAAD,CAAYvE,KAAK,SAASrB,UAAWxD,EAAQiJ,WAAYI,aAAW,UAClE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACE9F,UAAWxD,EAAQ8I,MACnBS,YAAa9K,EAAM+K,gBACnBC,WAAY,CAAE,aAAchL,EAAM+K,iBAClC7E,SAdgB,SAAChD,GACrB,IAAM+H,EAAM/H,EAAEiD,OAAOH,MACrBhG,EAAMkL,QAAQD,O,sDC9BGE,G,+MAEjBC,WAAaC,IAAMC,Y,EAEnBvD,MAAQ,CACJwD,SAAS,G,wDAGb,WACIC,KAAKC,SAAS,CACVF,SAAS,M,gCAIjB,WACQC,KAAKxL,MAAM0L,gBAAgD,MAA9BF,KAAKxL,MAAM0L,gBACxCF,KAAKzD,MAAMwD,SAAWC,KAAKJ,WAAWO,QAAQC,mB,oBAItD,WACI,OACI,kBAAC,cAAD,iBACQJ,KAAKxL,MADb,CAEI6L,IAAKL,KAAKJ,kB,GAxBoBU,a,qICO/B,SAASC,GAAa/L,GAAQ,IAAD,IAEnCgM,EAAqDhM,EAArDgM,KAAMC,EAA+CjM,EAA/CiM,SAAUjE,EAAqChI,EAArCgI,OAAQkE,EAA6BlM,EAA7BkM,aAAc5D,EAAetI,EAAfsI,YAC7C,EAAgC9G,mBAAQ,UAAC8G,EAAY1C,YAAb,QAAqB,IAA7D,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAAkC5K,mBAAQ,UAAC8G,EAAY+D,aAAb,QAAsB,IAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwC/K,mBAAS,IAAjD,mBAAOgL,EAAP,KAAqBC,EAArB,KAEMC,EAAc,WAClB1M,EAAM2M,eAKFC,EAAiB,SAAC1J,GACpBA,EAAEC,iBACF,IAAM5D,EAAQD,IACd,GAAG6M,GAAYG,EAAU,CACrB,IAAM1I,EAAO,CACTrE,QACAsN,KAAM,CACJjH,KAAMuG,EACNE,MAAOC,EACPrK,SAAQ,OAAEuK,QAAF,IAAEA,IAAgB,OAGhC,GAAc,QAAXxE,EAAiB,CAClBpE,EAAKoE,OAAS,SACd,IAAM8E,EAASX,EAASY,QAAQ,6CAAoC,KAAKvI,cACzEZ,EAAKiJ,KAAK7I,GAAK8I,OAGflJ,EAAKoE,OAAS,SACdpE,EAAKiJ,KAAKnE,IAAMJ,EAAYI,IAE9BuB,GAAO+C,KAAK,cAAepJ,GAC3B5D,EAAM2M,gBAId,OACE,6BACE,kBAACM,GAAA,EAAD,CAAQjB,KAAMA,EAAMkB,QAASR,EAAaS,kBAAgB,qBACxD,kBAACC,GAAA,EAAD,CAAapJ,GAAG,qBAAqBiI,GACrC,0BAAM/G,SAAU0H,GACZ,kBAACS,GAAA,EAAD,KACI,kBAAC3H,EAAA,EAAD,CACIO,WAAS,EACTlF,OAAO,QACPiD,GAAG,WACH+B,MAAM,YACNK,KAAK,OACLJ,MAAOmG,EACPjG,SAAU,SAAChD,GAAD,OAAOkJ,EAAYlJ,EAAEiD,OAAOH,QACtCF,WAAS,IAEb,kBAACJ,EAAA,EAAD,CACI1B,GAAG,YACH+B,MAAM,aACNK,KAAK,OACLJ,MAAOsG,EACPpG,SAAU,SAAChD,GAAD,OAAOqJ,EAAarJ,EAAEiD,OAAOH,QACvCF,WAAS,IAEb,kBAACJ,EAAA,EAAD,CACI1B,GAAG,eACH+B,MAAM,gBACNK,KAAK,WACLJ,MAAOwG,EACPtG,SAAU,SAAChD,GAAD,OAAOuJ,EAAgBvJ,EAAEiD,OAAOH,QAC1CF,WAAS,KAIjB,kBAACwH,GAAA,EAAD,KACA,kBAACjH,EAAA,EAAD,CAAQE,QAASmG,EAAapG,MAAM,WAApC,UAGA,kBAACD,EAAA,EAAD,CAAQD,KAAK,SAASG,QAASqG,EAAgBtG,MAAM,WAChD4F,O,cC7EF,SAASqB,GAAavN,GAEnC,IAAOgM,EAAqBhM,EAArBgM,KAAM1D,EAAetI,EAAfsI,YAEb,EAAgBkF,qBAAW9D,IAApB3B,EAAP,oBAaA,OACE,6BACE,kBAACkF,GAAA,EAAD,CACEjB,KAAMA,EACNkB,QAAS,kBAAMlN,EAAM2M,eACrBQ,kBAAgB,qBAChBM,mBAAiB,4BAEjB,kBAACL,GAAA,EAAD,CAAapJ,GAAG,sBAAhB,mBACA,kBAACqJ,GAAA,EAAD,KACE,kBAACK,GAAA,EAAD,CAAmB1J,GAAG,4BAAtB,gHAIF,kBAACsJ,GAAA,EAAD,KACE,kBAACjH,EAAA,EAAD,CAAQE,QAAS,kBAAMvG,EAAM2M,eAAerG,MAAM,WAAlD,UAGA,kBAACD,EAAA,EAAD,CAAQE,QA5BG,SAACrD,GAClB,IAAM3D,EAAQD,IACd2K,GAAO+C,KAAK,cAAe,CACvBzN,QACAsN,KAAMvE,EACNqF,YAAa5F,EAAME,MAAM,KAE7BjI,EAAM2M,eAqB6BrG,MAAM,UAAUL,WAAS,GAAtD,YChCV,IAAM9F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACLS,OAAQV,EAAMI,QAAQ,KAG9BmN,IAAK,CACD7M,OAAQV,EAAMI,QAAQ,IAE1BoN,SAAU,CACNC,SAAU,WACVC,OAAQ1N,EAAMI,QAAQ,GACtBuN,MAAO3N,EAAMI,QAAQ,IAEzBwN,cAAe,CACX7D,QAAQ,aAgHD8D,OA1Gf,SAAqBlO,GACjB,IAAMuB,EAAUpB,KAChB,EAA0BqN,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KACA,EAAyCvI,oBAAS,GAAlD,mBAAO2M,EAAP,KAAqBC,EAArB,KACA,EAAyC5M,oBAAS,GAAlD,mBAAO6M,EAAP,KAAqBC,EAArB,KACA,EAAyC9M,oBAAS,GAAlD,mBAAO+M,EAAP,KAAqBC,EAArB,KAiCA,OACI,yBAAKzJ,UAAU,eACX,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,GAAIhF,QAAS,GACjE,kBAAC0E,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,GAAIhF,QAAS,GACjE,kBAACgO,GAAA,EAAD,CAASC,MAAM,YACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QA7BrB,WACvB6H,GAAiB,IA4BwD7M,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBACxG,kBAAC,KAAD,QAGe,OAAtB7C,EAAMO,aAAwBP,EAAMO,YAAYI,MAAQyB,iKAAYwE,wBACrE,kBAACF,GAAA,EAAD,CAASC,MAAM,eACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QA/BrB,WACvB+H,GAAiB,IA8BwD/M,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBACxG,kBAAC,KAAD,QAGN,KACqB,OAAtB7C,EAAMO,aAAwBP,EAAMO,YAAYI,MAAQyB,iKAAYwE,wBACjE,kBAACF,GAAA,EAAD,CAASC,MAAM,eACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QAlCzB,WACvBiI,GAAiB,IAiC4DjN,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBACxG,kBAAC,KAAD,QAEK,MAGrB,kBAACzF,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,EAAGhF,QAAS,GAChE,kBAACgO,GAAA,EAAD,CAASC,MAAM,gBACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QAtCrB,SAACrD,GACxB6G,EAAS,CAAC3D,KAAMyB,EAAsBK,SAAS,KAqC0B3G,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBACxG,kBAAC,KAAD,UAKhB,kBAAC,WAAD,KACKuD,EACG,kBAACpC,GAAD,CACIC,MAAM,EACNW,YAAa,kBAAMyB,GAAiB,IACpCnC,SAAS,cACTC,aAAa,OACblE,OAAO,MACPM,YAAY,KAElB,KAED+F,GAAsC,OAAtBtG,EAAMO,aAAwBP,EAAMO,YAAYI,MAAQyB,iKAAYwE,wBACjF,kBAAC5C,GAAD,CACIC,MAAM,EACNW,YAAa,kBAAM2B,GAAiB,IACpCrC,SAAS,cACTC,aAAa,SACblE,OAAO,SACPM,YAAaP,EAAMO,cAEzB,KAEDiG,GAAsC,OAAtBxG,EAAMO,aAAwBP,EAAMO,YAAYI,MAAQyB,iKAAYwE,wBACjF,kBAACpB,GAAD,CACIvB,MAAM,EACNW,YAAa,kBAAM6B,GAAiB,IACpClG,YAAaP,EAAMO,cAEzB,Q,kFC5HH,SAASsG,GAAc5O,GAAQ,IAAD,EAEpCgM,EAAuEhM,EAAvEgM,KAAMC,EAAiEjM,EAAjEiM,SAAUC,EAAuDlM,EAAvDkM,aAAc5D,EAAyCtI,EAAzCsI,YAAauG,EAA4B7O,EAA5B6O,eAAgBC,EAAY9O,EAAZ8O,SAClE,EAAwCtN,mBAAQ,UAAC8G,EAAYrG,gBAAb,QAAyB,IAAzE,mBAAOuK,EAAP,KAAqBC,EAArB,KACA,EAAkCjL,oBAAS,GAA3C,mBAAOuN,EAAP,KAAkBC,EAAlB,KAEAjM,qBAAU,WACNkM,MACD,IAEH,IAAMA,EAAoB,WAatB,OAXAhF,GAAOiF,GAAG,gBAAgB,SAAAtL,GACtB6I,EAAgB,IAChBzM,EAAM2M,iBAGV1C,GAAOiF,GAAG,aAAa,SAAAtL,GACnB6I,EAAgB,IAChBuC,GAAa,MAIV,kBAAM/E,GAAOkF,eAIlBzC,EAAc,WAClB1M,EAAM2M,eAIFyC,EAAoB,SAAClM,GACvB,IAAM3D,EAAQD,IACd4D,EAAEC,iBACF,IAAMS,EAAO,CACTkL,WACAO,OAAQR,EACRvG,cACAkE,gBAEJvC,GAAO+C,KAAK,qBAAsBzN,EAAOqE,IAG7C,OACE,6BACE,kBAACqJ,GAAA,EAAD,CAAQjB,KAAMA,EAAMkB,QAASR,EAAaS,kBAAgB,qBACxD,kBAACC,GAAA,EAAD,CAAapJ,GAAG,qBAAqB+K,EAAY,iBAAmB9C,GACpE,0BAAM/G,SAAUkK,GACZ,kBAAC/B,GAAA,EAAD,KACI,kBAAC3H,EAAA,EAAD,CACI1B,GAAG,eACH+B,MAAM,gBACNK,KAAK,WACLJ,MAAOwG,EACPtG,SAAU,SAAChD,GAAD,OAAOuJ,EAAgBvJ,EAAEiD,OAAOH,QAC1CF,WAAS,KAGjB,kBAACwH,GAAA,EAAD,KACA,kBAACjH,EAAA,EAAD,CAAQE,QAASmG,EAAapG,MAAM,WAApC,UAGA,kBAACD,EAAA,EAAD,CAAQD,KAAK,SAASG,QAAS6I,EAAmB9I,MAAM,WACnD4F,O,cCrEXoD,GAAoBlP,aAAW,SAACC,GAAD,MAAY,CAC/CC,KAAM,CACJwN,SAAU,YAEZC,OAAQ,CACNzH,MAAOjG,EAAMY,QAAQ6F,KAA4B,UAAvBzG,EAAMY,QAAQmF,KAAmB,IAAM,KACjE0H,SAAU,WACVyB,KAAM,MACNjF,WAAW,SAEbkF,WAAY,CACVlJ,MAAOjG,EAAMY,QAAQ6F,KAA4B,UAAvBzG,EAAMY,QAAQmF,KAAmB,IAAM,KACjE0H,SAAU,WACVyB,KAAM,OACNjF,WAAY,KAEdmF,IAAK,CACHnJ,MAAO,UACPoJ,kBAAmB,QACnB5B,SAAU,WACVyB,KAAM,MACNjF,WAAW,SAEbqF,QAAS,CACPrJ,MAAO,UACPoJ,kBAAmB,QACnB5B,SAAU,WACVyB,KAAM,OACNjF,WAAY,KAEdsF,OAAQ,CACNC,cAAe,aAInB,SAASC,GAAU9P,GACjB,IAAMuB,EAAU+N,KAEhB,OACE,yBAAKvK,UAAWxD,EAAQjB,MACtB,kBAACyP,GAAA,EAAD,eACE7P,QAAQ,cACR6E,UAAgC,SAArB/E,EAAMgQ,WAAwBzO,EAAQiO,WAAajO,EAAQwM,OACtEkC,KAAM,GACNC,UAAW,GACPlQ,EALN,CAMEgG,MAAO,OAET,kBAAC+J,GAAA,EAAD,eACE7P,QAAQ,gBACRiQ,eAAa,EACbpL,UAAgC,SAArB/E,EAAMgQ,WAAwBzO,EAAQoO,QAAUpO,EAAQkO,IACnElO,QAAS,CACPqO,OAAQrO,EAAQqO,QAElBK,KAAM,GACNC,UAAW,GACPlQ,KAMZ,IAAMG,GAAYC,YAAW,CAC3BE,KAAM,CACJ8P,SAAU,KAIC,SAASC,GAAuBrQ,GAC7C,IAAMuB,EAAUpB,KAEhB,OACE,yBAAK4E,UAAWxD,EAAQjB,MACtB,kBAACwP,GAAD,CAAWE,WAAiC,SAArBhQ,EAAMgQ,WAAwB,OAAQ,WC3DnE,IAAM7P,GAAYC,YAAW,CAC3BE,KAAM,CACJgQ,WAAY,UACZlG,QAAS,YAsMEmG,OAjMf,WAEI,MAA0B/C,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KACA,EAA0BvI,mBAASuG,EAAME,OAAzC,mBAAOA,EAAP,KAAcuI,EAAd,KACA,EAAsChP,mBAAS,IAA/C,mBAAOiP,EAAP,KAAoBC,EAApB,KACA,EAAsClP,mBAASuG,EAAMO,aAArD,mBAAOA,EAAP,KAAoBqI,EAApB,KACA,EAAgCnP,mBAAS,IAAzC,mBAAOsN,EAAP,KAAiB8B,EAAjB,KACA,EAAyCpP,oBAAS,GAAlD,mBAAOqP,EAAP,KAAuBC,EAAvB,KAEMvP,EAAUpB,KAEhB4C,qBAAU,WACNyN,GAAS,SAAAvI,GACL,OAAOF,EAAME,SAEjB0I,EAAe5I,EAAMO,eACtB,CAACP,EAAME,MAAOF,EAAMO,cAEvBvF,qBAAU,WACNkM,MACD,IAEH,IAAMA,EAAoB,WA6CxB,OA3CAhF,GAAOiF,GAAG,aAAcrP,GAExBoK,GAAOiF,GAAG,iBAAiB,SAAAtL,GACtBA,EAAKsF,aAAoC,OAArBtF,EAAKsF,aACxBa,EAAS,CAAC3D,KAAMyB,EAA6BK,QAAStE,EAAKsF,cAE5DtF,EAAKmN,UAAU9I,OAASrE,EAAKmN,UAAU9I,MAAMxD,OAAS,IACrDsF,EAAS,CAAC3D,KAAMyB,EAAoBK,QAAStE,EAAKmN,UAAU9I,QAEzDrE,EAAK0E,aAAoC,OAArB1E,EAAK0E,aACxByB,EAAS,CAAC3D,KAAMyB,EAAsBK,QAAStE,EAAK0E,kBAK9D2B,GAAOiF,GAAG,kBAAkB,SAAAtL,GACnBA,EAAKmN,UAAU9I,OAASrE,EAAKmN,UAAU9I,MAAMxD,OAAS,IACrDsF,EAAS,CAAC3D,KAAMyB,EAAoBK,QAAStE,EAAKmN,UAAU9I,QAEzDrE,EAAK0E,aAAoC,OAArB1E,EAAK0E,aACxByB,EAAS,CAAC3D,KAAMyB,EAAsBK,QAAStE,EAAK0E,kBAKlE2B,GAAOiF,GAAG,gBAAgB,SAAAtL,GACtBmG,EAAS,CAAC3D,KAAMyB,EAAsBK,QAAStE,EAAKiJ,UAGxD5C,GAAOiF,GAAG,eAAe,SAAAtL,GACrBmG,EAAS,CAAC3D,KAAMyB,EAAqBK,QAAStE,OAGlDqG,GAAOiF,GAAG,eAAe,SAAArC,GACrB9C,EAAS,CAAC3D,KAAMyB,EAAqBK,QAAS2E,OAIlD5C,GAAOiF,GAAG,eAAe,SAAArC,GACrB9C,EAAS,CAAC3D,KAAMyB,EAAqBK,QAAS2E,EAAKnE,SAIhD,kBAAMuB,GAAOkF,eAIhB6B,EAAc,SAACC,GACjB,IAAM1R,EAAQD,IACX2R,EAAQC,WACPN,EAAYK,GACZH,GAAe,IAIZxI,EAAYI,MAAQuI,EAAQvI,KAC3BuB,GAAO+C,KAAK,cAAezN,EAAO+I,EAAa2I,EAASlJ,EAAMmB,YAAYzH,WAqBlFsP,EACA,yBAAKhM,UAAU,kBACX,kBAAC,GAAD,OA2DR,OAvDGkD,EAAMxD,OAAS,IACdsM,EAAY9I,EAAMnE,KAAI,SAAC+I,EAAMvH,GACzB,IAAI6L,EAAU,EACVC,EAAc,EAMlB,OALGnJ,EAAMxD,OAAS,IACd0M,EAAUtE,EAAKnE,IAEf0I,EAA8B,OAAhB9I,EAAuB,EAAIA,EAAYI,KAGjD,kBAAC2I,GAAA,EAAD,CACIC,QAAM,EACN/L,IAAK4L,EACLI,SAAUJ,IAAYC,EACtB7K,QAAS,kBAAMyK,EAAYnE,KAE9BsE,IAAWC,EACZ,kBAACI,GAAA,EAAD,KACI,kBAAC,KAAD,OACe,KACnB,kBAACC,GAAA,EAAD,CAAcC,QAAS7E,EAAKjH,OAC3BiH,EAAKqE,UAAY,kBAAC,KAAD,MAAe,UAQ9CT,EAAYhM,OAAS,IACrBsM,EAAYN,EAAY3M,KAAI,SAAC+I,GACzB,IAAIsE,EAAU,EACVC,EAAc,EAKjB,OAJGnJ,EAAMxD,OAAS,IACf0M,EAAUtE,EAAKnE,IACf0I,EAA8B,OAAhB9I,EAAuB,EAAIA,EAAYI,KAGhD,kBAAC2I,GAAA,EAAD,CACAC,QAAM,EACN/L,IAAK4L,EACLI,SAAUJ,IAAYC,EACtB7K,QAAS,kBAAMyK,EAAYnE,KAE1BsE,IAAWC,EACZ,kBAACI,GAAA,EAAD,KACI,kBAAC,KAAD,OACe,KACnB,kBAACC,GAAA,EAAD,CAAcC,QAAS7E,EAAKjH,OAC3BiH,EAAKqE,UAAY,kBAAC,KAAD,MAAe,UAO7C,kBAAC/L,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,GAAIhF,QAAS,GAChEoQ,EACG,kBAACjC,GAAD,CACI5C,MAAM,EACN1D,YAAaA,EACbwG,SAAUA,EACVD,eAAgB9G,EAAMmB,YAAYzH,SAClCkL,YAAa,kBAAMmE,GAAe,IAClC7E,SAAS,iBACTC,aAAa,OACblE,OAAO,QAEb,KACF,yBAAKjD,UAAU,cACX,kBAAC,GAAD,CAAQmG,QA1FE,SAAC2B,GACnB,GAAGA,EAAK,CACJ,IAAM8E,EAAW1J,EAAM2J,QAAO,SAAC7N,EAAIC,GAC/B,OAAOD,EAAG6B,KAAKpB,cAAcqN,OAAOhF,EAAKrI,gBAAkB,KAG3DmN,EAASlN,OAAS,GAAGiM,EAAeiB,QAGxCjB,EAAe,KAiFqB3F,gBAAiB,uBAErD,kBAAC,GAAD,CACI+G,UAAU,EACVC,MAAO,CAAExR,MAAO,OAAQmG,OAAQ,SAChC,yBAAK3B,UAAU,aACX,kBAACiN,GAAA,EAAD,CAAMpN,UAAU,MAAMgG,aAAW,cAC5BmG,KAIb,kBAAC,GAAD,Q,0CC5MG,SAASkB,GAAWjS,GAEjC,IAAOgM,EAAQhM,EAARgM,KAEP,EAA0BwB,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KAgBA,OACE,6BACE,kBAACkD,GAAA,EAAD,CACEjB,KAAMA,EACNkB,QAAS,kBAAMlN,EAAM2M,eACrBQ,kBAAgB,qBAChBM,mBAAiB,4BAEjB,kBAACL,GAAA,EAAD,CAAapJ,GAAG,sBAAhB,iBACA,kBAACqJ,GAAA,EAAD,KACE,kBAACK,GAAA,EAAD,CAAmB1J,GAAG,4BAAtB,6CAIF,kBAACsJ,GAAA,EAAD,KACE,kBAACjH,EAAA,EAAD,CAAQE,QAAS,kBAAMvG,EAAM2M,eAAerG,MAAM,WAAlD,QAGA,kBAACD,EAAA,EAAD,CAAQE,QAhCI,SAACrD,GACnB,IAAM3D,EAAQD,IACR4S,EAAqBnK,EAAMmB,YAAYzH,SAC7CwI,GAAO+C,KAAK,aAAc,CACtBzN,QACAsN,KAAM9E,EAAMO,YAAYI,IACxBjH,SAAUyQ,IAEd1S,aAAaM,WAAW,iBACxBiK,EAAS,CAAC3D,KAAMyB,IAChB7H,EAAM2M,cACNjN,OAAOC,SAASC,QAAO,IAqBa0G,MAAM,WAApC,WCpCK,SAAS6L,GAAQnS,GAAQ,IAAD,MAE9BgM,EAAQhM,EAARgM,KACP,EAA0BwB,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KACA,EAAgCvI,mBAAQ,UAACuG,EAAMmB,YAAYzH,gBAAnB,QAA+B,IAAvE,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAQ,UAACuG,EAAMmB,YAAYrH,aAAnB,QAA4B,IAA9D,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA4BN,mBAAQ,UAACuG,EAAMmB,YAAYpI,cAAnB,QAA6B,IAAjE,mBAAOA,EAAP,KAAesR,EAAf,KACA,EAAsC5Q,mBAAS,IAA/C,mBAAO6Q,EAAP,KAAoBC,EAApB,KACA,EAA4C9Q,oBAAS,GAArD,mBAAO+Q,EAAP,KAA2BC,EAA3B,KAGAzP,qBAAU,WACNkM,MACD,IAEHlM,qBAAU,WACRrB,EAAYqG,EAAMmB,YAAYzH,UAC9BK,EAASiG,EAAMmB,YAAYrH,OAC3BuQ,EAAUrK,EAAMmB,YAAYpI,UAC3B,CAACiH,EAAMmB,cAEV,IAAM+F,EAAoB,WAmBxB,OAjBAhF,GAAOiF,GAAG,qBAAqB,SAAAtL,GAC7BmG,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,IACpDmG,EAAS,CAAC3D,KAAMyB,EAA2CK,QAAStE,IACpE5D,EAAM2M,cACN6F,GAAc,MAGhBvI,GAAOiF,GAAG,mBAAmB,SAAAtL,GAC3BmG,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,IACpDmG,EAAS,CAAC3D,KAAMyB,EAA2CK,QAAStE,IACpE5D,EAAM2M,cACN6F,GAAc,MAMT,kBAAMvI,GAAOkF,eAIhBzC,EAAc,WAClB1M,EAAM2M,eAIF8F,EAAqB,SAACvP,GACxBA,EAAEC,iBACF,IAAM5D,EAAQD,IACd2K,GAAO+C,KAAK,iBAAkB,CAC5BzN,QACAkC,WACAI,QACAwQ,cACAvR,WAEF0R,GAAc,IAIlB,OACE,6BACE,kBAACvF,GAAA,EAAD,CAAQjB,KAAMA,EAAMkB,QAASR,EAAaS,kBAAgB,qBACxD,kBAACC,GAAA,EAAD,CAAapJ,GAAG,qBAAhB,wBACCuO,EAAqB,kBAAC,GAAD,MAAgB,KACtC,0BAAMrN,SAAUuN,GACZ,kBAACpF,GAAA,EAAD,KACI,kBAAC3H,EAAA,EAAD,CACI1B,GAAG,YACH+B,MAAM,YACNK,KAAK,OACLJ,MAAOvE,EACPyE,SAAU,SAAChD,GAAD,OAAOxB,EAAYwB,EAAEiD,OAAOH,QACtCF,WAAS,EACTf,UAAU,uBAEd,kBAACW,EAAA,EAAD,CACI1B,GAAG,SACH+B,MAAM,aACNK,KAAK,OACLJ,MAAOlF,EACPoF,SAAU,SAAChD,GAAD,OAAOkP,EAAUlP,EAAEiD,OAAOH,QACpCF,WAAS,EACTf,UAAU,uBAEd,kBAACW,EAAA,EAAD,CACI1B,GAAG,YACH+B,MAAM,QACNK,KAAK,QACLJ,MAAOnE,EACPqE,SAAU,SAAChD,GAAD,OAAOpB,EAASoB,EAAEiD,OAAOH,QACnCF,WAAS,EACTf,UAAU,uBAEd,kBAACW,EAAA,EAAD,CACI1B,GAAG,WACH+B,MAAM,eACNK,KAAK,WACLJ,MAAOqM,EACPnM,SAAU,SAAChD,GAAD,OAAOoP,EAAepP,EAAEiD,OAAOH,QACzCF,WAAS,KAGjB,kBAACwH,GAAA,EAAD,KACA,kBAACjH,EAAA,EAAD,CAAQE,QAASmG,EAAapG,MAAM,WAApC,UAGA,kBAACD,EAAA,EAAD,CAAQD,KAAK,SAASG,QAASkM,EAAoBnM,MAAM,WAAzD,YC/GZ,IAAMnG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACLS,OAAQV,EAAMI,QAAQ,KAG9BmN,IAAK,CACD7M,OAAQV,EAAMI,QAAQ,IAE1BoN,SAAU,CACNC,SAAU,WACVC,OAAQ1N,EAAMI,QAAQ,GACtBuN,MAAO3N,EAAMI,QAAQ,IAEzBwN,cAAe,CACX7D,QAAQ,aAwEDsI,OAnEf,WAEI,IAAMnR,EAAUpB,KAEhB,EAA0BqN,qBAAW9D,IAArC,mBAAcK,GAAd,WACA,EAAqCvI,oBAAS,GAA9C,mBAAOmR,EAAP,KAAmBC,EAAnB,KACA,EAAmBpR,mBAAS,CACxBwC,GAAI,IACJ6O,SAAU,IACVhR,MAAO,IACP4B,OAAQ,IACR3C,OAAQ,OALLgS,EAAP,oBAOA,EAAwBtR,oBAAS,GAAjC,mBAAOwK,EAAP,KAAa+G,EAAb,KAYA,OACI,yBAAKhO,UAAU,gBACX,kBAACoN,GAAD,CACIW,SAAUA,EACV9G,KAAMA,EACNW,YAAa,kBAAMoG,GAAQ,MAE/B,kBAAC5N,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,GAAIhF,QAAS,GACjE,kBAAC0E,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,GAAIhF,QAAS,GACjE,kBAACgO,GAAA,EAAD,CAASC,MAAM,WACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QAAS,WAfrDwM,GAAQ,IAeyExR,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBAChH,kBAAC,KAAD,QAGR,kBAAC6D,GAAA,EAAD,CAASC,MAAM,QACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QAAS,kBAAMqM,GAAe,IAAQrR,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBACjH,kBAAC,KAAD,SAIZ,kBAACzF,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,EAAGhF,QAAS,GAChE,kBAACgO,GAAA,EAAD,CAASC,MAAM,gBACX,kBAAC/D,GAAA,EAAD,CAAYrE,MAAM,UAAUC,QAhCrB,SAACrD,GACxB6G,EAAS,CAAC3D,KAAMyB,EAAuBK,SAAS,KA+ByB3G,QAAS,CAACjB,KAAMiB,EAAQ0M,eAAgBrD,aAAW,gBACxG,kBAAC,KAAD,UAKhB,kBAAC,WAAD,KAEK+H,EACG,kBAACV,GAAD,CACIjG,MAAM,EACNW,YAAa,kBAAMiG,GAAe,MAExC,Q,UClFH,SAASI,GAAShT,GAE7B,IAAO8S,EAA+C9S,EAA/C8S,SAAUG,EAAqCjT,EAArCiT,QAAS/J,EAA4BlJ,EAA5BkJ,YAAaZ,EAAetI,EAAfsI,YACvC,EAA4C9G,oBAAS,GAArD,mBAAO+Q,EAAP,KAA2BC,EAA3B,KAEAzP,qBAAU,WACNkM,MACD,IAEH,IAAMA,EAAoB,WACtBhF,GAAOiF,GAAG,oBAAoB,SAAAtL,GAC1B4O,GAAc,GACdxS,EAAMkN,cAIRR,EAAc,WAChB1M,EAAMkN,WAQV,OAAO,kBAACD,GAAA,EAAD,CAAQjB,KAAMiH,IAAW,EAAO/F,QAASR,EAAaS,kBAAgB,qBACrE,kBAACC,GAAA,EAAD,CAAapJ,GAAG,qBAAhB,aACA,kBAACqJ,GAAA,EAAD,KACI,kBAACrI,EAAA,EAAD,CAAQkO,IAAKJ,EAAShS,OAAQqS,IAAKL,EAAShS,OAAQiE,UAAU,mBAC9D,wCAAc+N,EAASrR,UACvB,qCAAWqR,EAASjR,OACpB,sCAAYiR,EAASrP,SAExB8O,EAAqB,kBAAC,GAAD,CAAWvC,WAAW,SAAY,KACxD,kBAAC1C,GAAA,EAAD,KACI,kBAACjH,EAAA,EAAD,CAAQE,QAASmG,EAAapG,MAAM,WAApC,SAGwB,UAAvB4C,EAAYzF,QAAsBqP,EAASpK,MAAQQ,EAAYR,IAC5D,kBAACrC,EAAA,EAAD,CAAQE,QAAS,kBAnBb6M,EAmB8BN,EAASpK,IAlBvD8J,GAAc,QACdvI,GAAO+C,KAAK,UAAWoG,EAAM9K,EAAYI,KAF1B,IAAC0K,GAmB6C9M,MAAM,WAAvD,OAGF,OC/CH,SAAS+M,KACtB,MAAehI,IAAM7J,UAAS,GAAvBwK,EAAP,oBAMA,OACE,6BACE,kBAACiB,GAAA,EAAD,CACEjB,KAAMA,EACNkB,QARc,aASdC,kBAAgB,qBAChBM,mBAAiB,4BAEjB,kBAACL,GAAA,EAAD,CAAapJ,GAAG,sBAAsB,UACtC,kBAACqJ,GAAA,EAAD,KACE,kBAACK,GAAA,EAAD,CAAmB1J,GAAG,4BAAtB,uJCHV,IAAM7D,GAAYC,YAAW,CAC3BkT,MAAO,CACLC,SAAU,KAEZC,YAAa,CACXjT,MAAO,OACPkT,WAAY,OAEdC,OAAQ,CACJ1S,gBAAiB,WAErB2S,eAAgB,CACZC,YAAa,qBAEjBC,YAAa,CACXnN,OAAQ,OACRoN,UAAW,YA+MAC,GA3MF,WACT,IAAMxS,EAAUpB,KAChB,EAA0BqN,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KACA,EAA0BvI,mBAASuG,EAAMgB,WAAzC,mBAAOiL,EAAP,KAAcC,EAAd,KACA,EAAsCzS,mBAAS,IAA/C,mBAAO0S,EAAP,KAAoBC,EAApB,KACA,EAA4B3S,mBAAS,KAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAA0C7S,mBAAS,MAAnD,mBAAO8S,EAAP,KAAsBC,EAAtB,KACA,EAAgC/S,mBAAS,CACrCkH,IAAI,IACJjH,SAAU,IACVI,MAAO,IACP4B,OAAQ,MAJZ,mBAAOqP,EAAP,KAAiB0B,EAAjB,KAMA,EAAwBhT,oBAAS,GAAjC,mBAAOwK,EAAP,KAAa+G,EAAb,KACA,EAAyCvR,oBAAS,GAAlD,mBAAOiT,EAAP,KAAqBC,EAArB,KAEAhV,OAAOiV,eAAiB,WACpB,IAAMpV,EAAQD,IACd2K,GAAO+C,KAAK,aAAc,CACtBH,KAAM9E,EAAMO,YAAYI,IACxBnJ,QACAkC,SAAUsG,EAAMmB,YAAYzH,YAIpCsB,qBAAU,WACHuR,IAAkBF,GAAWK,GAC5BG,MAEN,CAACN,EAAeF,IAElBrR,qBAAU,WACNkR,GAAS,SAAAD,GACL,OAAOjM,EAAMgB,eAElB,CAAChB,EAAMgB,YAEVhG,qBAAU,WACNkM,MACD,IAEHlM,qBAAU,WACNyR,GAAY,SAAA5Q,GACR,OAAOmE,EAAMmB,iBAGlB,CAACnB,EAAMmB,cAEV,IAWM0L,EAAU,WACZF,GAAiB,GACjB1R,YAAW,WACPnD,MACD,MAGDoP,EAAoB,WAGtBhF,GAAOiF,GAAG,kBAAkB,SAAAtL,GACrBA,EAAKmF,WACJgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAIjEkB,GAAOiF,GAAG,iBAAiB,SAAAtL,GACnBA,EAAKsF,cACFtF,EAAKsF,YAAY2L,QAAQD,IAC5BL,EAAiB3Q,EAAKsF,YAAYR,KAClCqB,EAAS,CAAC3D,KAAMyB,EAA6BK,QAAStE,EAAKsF,eAE5DtF,EAAKmF,WACJgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAIjEkB,GAAOiF,GAAG,YAAY,SAAAkF,GACjBrK,EAAS,CAAC3D,KAAMyB,EAAmBK,QAASkM,OAGjDnK,GAAOiF,GAAG,kBAAkB,SAAAtL,GACrBA,EAAKmF,WACJgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAIhEkB,GAAOiF,GAAG,YAAY,SAAAtL,GAChBA,EAAKmF,WACJgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAIjEkB,GAAOiF,GAAG,gBAAgB,SAAAtL,GACnBA,EAAKmF,WACJgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAIjEkB,GAAOiF,GAAG,qBAAqB,SAAAtL,GACxBA,EAAKmF,WACJgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAIjEkB,GAAOiF,GAAG,oBAAoB,SAAAtL,GAC1ByQ,EAAUzQ,EAAKwQ,QACZxQ,EAAKkR,kBACJ/K,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKkR,uBAmB/DC,EAAc,SAACX,GACjB,IAAMY,EAAchB,EAAMpC,QAAO,SAAC7N,EAAIC,GAClC,OAAOD,EAAG2E,MAAQ0L,KAEnBY,EAAYvQ,OAAS,IACpB+P,EAAYQ,EAAY,IACxBjC,GAAQ,KAIZ5J,EACA,yBAAKpE,UAAU,kBACX,kBAAC,GAAD,OA0BR,OAvBGiP,EAAMvP,OAAS,IACd0E,EAAY6K,EAAMlQ,KAAI,SAACC,EAAIuB,GACnB,OAAO,kBAAC+L,GAAA,EAAD,CAAUC,QAAM,EAAC/L,IAAKxB,EAAG2E,IAAK1E,GAAID,EAAG2E,IAAKnC,QAAS,kBAAMwO,EAAYhR,EAAG2E,OACnE,kBAAC8I,GAAA,EAAD,KACI,kBAACxM,EAAA,EAAD,CAAQkO,IAAKnP,EAAGtC,SAAU0R,IAAKpP,EAAGjD,UAEtC,kBAAC2Q,GAAA,EAAD,CAAcC,QAAS3N,EAAGtC,UAAWsC,EAAGtC,eAK7DyS,EAAYzP,OAAS,IACpB0E,EAAY+K,EAAYpQ,KAAI,SAACC,EAAIuB,GACzB,OAAO,kBAAC+L,GAAA,EAAD,CAAUC,QAAM,EAAC/L,IAAKxB,EAAG2E,IAAK1E,GAAID,EAAG2E,IAAKnC,QAAS,kBAAMwO,EAAYhR,EAAG2E,OACnE,kBAAC8I,GAAA,EAAD,KACI,kBAACxM,EAAA,EAAD,CAAQkO,IAAKnP,EAAGtC,SAAU0R,IAAKpP,EAAGjD,UAEtC,kBAAC2Q,GAAA,EAAD,CAAcC,QAAS3N,EAAGtC,UAAWsC,EAAGtC,eAO5D,6BACKgT,EAAe,kBAAC,GAAD,MAAkB,KAClC,kBAACzB,GAAD,CACIF,SAAUA,EACV5J,YAAanB,EAAMmB,YACnBZ,YAAaP,EAAMO,YACnB2K,QAASjH,EACTkB,QAAS,kBAAM6F,GAAQ,MAE3B,kBAAC5N,EAAA,EAAD,CAAMC,WAAS,EAACR,UAAW8C,IAAO3C,UAAWxD,EAAQiS,aACjD,kBAACrO,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIV,UAAWxD,EAAQoS,gBAClC,kBAACxO,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIsM,MAAO,CAAC3H,QAAS,SAChC,kBAAC1E,EAAA,EAAD,CAAW1B,GAAG,uBAAuBkC,SAjE/B,SAAChD,GACvB,IAAMzB,EAAWyB,EAAEiD,OAAOH,MAC1B,GAAGvE,EAAS,CACR,IAAMyS,EAAcF,EAAMpC,QAAO,SAAC7N,EAAIC,GAClC,OAAOD,EAAGtC,SAAS+C,cAAcqN,OAAOpQ,EAAS+C,gBAAkB,KAGnE0P,EAAYzP,OAAS,GAAG0P,EAAeD,QAG3CC,EAAe,KAuD+DpO,MAAM,sBAAsB7F,QAAQ,WAAW4F,WAAS,KAE9H,kBAACmP,GAAA,EAAD,MACA,kBAAC,GAAD,CACAnD,UAAU,EACVC,MAAO,CAAExR,MAAO,OAAQmG,OAAQ,SAC5B,kBAACsL,GAAA,EAAD,KACK7I,QCnOvBhJ,GAAYC,YAAW,CAC3BE,KAAM,CACJgQ,WAAY,UAmBD4E,OAdf,WAEI,IAAM3T,EAAUpB,KAEhB,OACI,kBAACgF,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOkF,MAAI,EAACC,GAAI,GAAIhF,QAAS,GACjE,yBAAKsE,UAAU,iBACX,kBAAC,GAAD,MACA,kBAACoQ,GAAD,S,+BCXD,SAASC,GAAYpV,GAClC,IAIIqV,EAJJ,EAAiErV,EAA1D4D,KAAOO,EAAd,EAAcA,QAASmR,EAAvB,EAAuBA,WAAYxU,EAAnC,EAAmCA,OAAQyU,EAA3C,EAA2CA,OAASC,EAAaxV,EAAbwV,UAE9CC,EAAOC,OAASC,OAAO,MAIxBC,EAAiB,KA2EtB,OA1EIN,IACEM,EAAiB,6BACb,uBAAGhO,KAAO,kBAAoB0N,EAAYnP,OAAO,SAAS0P,IAAI,uBAC1D,yBAAK1C,IAAM,kBAAoBmC,EAAYpC,IAAI,qBAAqBnO,UAAU,6BAOxFsQ,EADa,SAAdG,EAEK,kBAACM,GAAA,EAAD,CAAON,UAAU,QAAQO,IAAI,EAAMC,cAAY,EAACC,eAAa,GAC3D,kBAAC5E,GAAA,EAAD,CAAU6E,MAAM,OAAOnE,MAAO,CAAC3H,QAAS,EAAG+L,aAAc,KACzC,WAAXZ,EACD,kBAAC/D,GAAA,EAAD,KACI,kBAACxM,EAAA,EAAD,CAAQkO,IAAI,cAAcC,IAAKrS,KACjB,KAClB,kBAAC2Q,GAAA,EAAD,CAAcyE,MAAM,OAAOnR,UAAU,wBACjC,uBAAGA,UAAU,mBAAmBwQ,EAAS,MAAQE,GAChDG,EAAiB,2BAAIA,GAAsB,KAC3CzR,EACG,uBAAGY,UAAU,mBACT,8BAAOZ,IACJ,QAOP,WAAdqR,EAEA,kBAACM,GAAA,EAAD,CAAON,UAAU,OAAOO,IAAI,EAAMC,cAAY,EAACC,eAAa,GAC1D,kBAAC5E,GAAA,EAAD,CAAU6E,MAAM,SAASnE,MAAO,CAAC3H,QAAS,EAAG+L,aAAc,KAC3C,WAAXZ,EACD,kBAAC/D,GAAA,EAAD,KACI,kBAACxM,EAAA,EAAD,CAAQkO,IAAI,cAAcC,IAAKrS,KACjB,KAClB,kBAAC2Q,GAAA,EAAD,CAAcyE,MAAM,SAASnR,UAAU,wBACnC,uBAAGA,UAAU,IAAIwQ,EAAS,MAAQE,GACjCG,EAAiB,2BAAIA,GAAsB,KAC3CzR,EACG,2BACI,8BAAOA,IACJ,QASrB,kBAAC2R,GAAA,EAAD,CAAON,UAAU,OAAOO,IAAI,EAAMC,cAAY,EAACC,eAAa,GAC1D,kBAAC5E,GAAA,EAAD,CAAU6E,MAAM,QAAQnE,MAAO,CAAC3H,QAAS,EAAG+L,aAAc,KACtD,kBAAC1E,GAAA,EAAD,CAAcyE,MAAM,QAAQnR,UAAU,kCAClC,uBAAGA,UAAU,mBAAmBwQ,EAAS,MAAQE,GAChDG,EAAiB,6BAAMA,GAAwB,KAC/CzR,EACG,uBAAGY,UAAU,iBACT,8BAAOZ,IACJ,MAGf,kBAACqN,GAAA,EAAD,CAAcO,MAAO,CAACqE,eAAe,aACjC,kBAACpR,EAAA,EAAD,CAAQkO,IAAI,cAAcC,IAAKrS,OAU/C,kBAACuQ,GAAA,EAAD,CAAUU,MAAO,CAAC3H,QAAQ,IACtB,kBAACjF,EAAA,EAAD,CAAMC,WAAS,EAAC2M,MAAO,CAAC3H,QAAQ,IAC5B,kBAACjF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACX,kBAACuM,GAAA,EAAD,KACKqD,M,yBC/ENgB,GAjBa,SAACrW,GACzB,OAAO,yBAAK+E,UAAU,kBACV,wBAAIA,UAAU,cACd,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,gCC8HDuR,OAjIf,WAEI,MAA0B9I,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KACA,EAAgBvI,mBAAS,IAAI+U,MAAMC,OAA5BC,EAAP,oBACA,EAAgCjV,mBAAS,IAAzC,mBAAOgI,EAAP,KAAiBkN,EAAjB,KACA,EAA8BlV,oBAAS,GAAvC,mBAAOmV,EAAP,KAAgBC,EAAhB,KACA,EAA4CpV,mBAAS,MAArD,mBAAOqV,EAAP,KAAuBC,EAAvB,KAGA/T,qBAAU,WACH4T,EACDF,EAAMM,QAGLN,EAAMO,QACNP,EAAMQ,YAAc,GAEvBjU,YAAW,WACT4T,GAAW,KACV,OAEL,CAACD,IAIH5T,qBAAU,WACNkM,MACD,IAGH,IAAMA,EAAoB,WAoDxB,OAlDAhF,GAAOiF,GAAG,iBAAiB,SAAAtL,GACzBmG,EAAS,CAAC3D,KAAMyB,EAA6BK,QAAStE,EAAKsF,cAC3DwN,GAAY,SAAAlN,GAAQ,4BAAQA,GAAR,CAAkB5F,UAGxCqG,GAAOiF,GAAG,kBAAkB,SAAAtL,GAC1BgT,GAAW,GACXF,GAAY,SAAAlN,GAAQ,4BAAQA,GAAR,CAAkB5F,UAGxCqG,GAAOiF,GAAG,gBAAgB,SAAAtL,GACxB8S,GAAY,SAAAlN,GAAQ,MAAI,CAAC5F,EAAKO,YAC9B4F,EAAS,CAAC3D,KAAMyB,EAAkBK,QAAStE,EAAKiJ,UAGlD5C,GAAOiF,GAAG,qBAAqB,SAAAtL,GAC7B8S,GAAY,SAAAlN,GAAQ,4BAAQA,GAAR,CAAkB5F,EAAKO,aAC3C4F,EAAS,CAAC3D,KAAMyB,EAAkBK,QAAStE,EAAKiJ,OAC7CjJ,EAAKmF,WACNgB,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKmF,eAK7DkB,GAAOiF,GAAG,eAAe,SAAAtL,GACvBkT,EAAkBlT,EAAKO,SACvBuS,GAAY,SAAAlN,GACV,OAAGA,EAAS/E,OAAS,IACZ,CAACb,GAGF,GAAN,mBAAW4F,GAAX,CAAqB5F,UAM3BqG,GAAOiF,GAAG,kBAAkB,SAAAtL,GAC1B8S,GAAY,SAAAlN,GAAQ,4BAAQA,GAAR,CAAkB5F,EAAKO,gBAG7C8F,GAAOiF,GAAG,YAAY,SAAAtL,GACpB8S,GAAY,SAAAlN,GAAQ,4BAAQA,GAAR,CAAkB5F,EAAKO,aAC3C4F,EAAS,CAAC3D,KAAMyB,EAA2BK,QAAStE,EAAKkR,sBAG3D7K,GAAOiF,GAAG,YAAY,SAAAtL,GACpB8S,GAAY,SAAAlN,GAAQ,4BAAQA,GAAR,CAAkB5F,UAGjC,kBAAMqG,GAAOkF,eAYtB,OARG0H,GAAkBA,EAAeK,QAAQnP,EAAMmB,YAAYzH,WAAa,IAAMkV,IAC/EC,GAAW,GACXE,EAAkB,MAClB9T,YAAW,WACT4T,GAAW,KACV,MAID,kBAAC,GAAD,CACI9E,UAAU,EACVpG,eAAe,IACfyL,sBAAuB,SAAAnX,GAAK,OAAI,yCAASA,EAAT,CAAgB+E,UAAU,mBAAmBgN,MAAO,CAACpR,QAAQ,YAC7FyW,sBAAuB,SAAApX,GAAK,OAAI,yCAASA,EAAT,CAAgB+E,UAAU,mBAAmBgN,MAAO,CAACpR,QAAQ,YAC7F0W,WAAY,SAAArX,GAAK,OAAI,yBAAK+R,MAAK,aAAG3H,QAAS,iBAAoBpK,EAAM+R,UACrEA,MAAO,CAAExR,MAAO,OAAQmG,OAAQ,SAChC,kBAACsL,GAAA,EAAD,KACGxI,EAAS/E,OAAS,EAAI,kBAAC,GAAD,MAA0B,KAEhD+E,EAAS/E,OAAS,EAAI+E,EAAS1F,KAAI,SAACC,EAAGuB,GACpC,IAAMgS,EAAYvP,EAAMgB,UAAUP,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQ3E,EAAGqP,QAC1DtS,EAAS,KACVwW,GAAa,IACdxW,EAASiH,EAAMgB,UAAUuO,GAAWxW,QAEtCiD,EAAGjD,OAASA,EAEZ,IAAI0U,EAAY,OAOhB,MANe,WAAZzR,EAAGqC,KACJoP,EAAY,SAEM,YAAZzR,EAAGqC,OACToP,EAAY,SAGV,kBAACJ,GAAD,CAAa7P,IAAKD,EAAK1B,KAAMG,EAAIyR,UAAWA,OAE/C,Q,iHChIbrV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkX,MAAO,CACLnN,QAAS/J,EAAMI,QAAQ,SAIZ,SAAS+W,GAAaxX,GAAQ,IAAD,EAC1C,EAAwBqL,IAAM7J,UAAS,GAAvC,mBAAOwK,EAAP,KAAa+G,EAAb,KACA,EAAsC1H,IAAM7J,SAAN,UAAexB,EAAMmE,eAArB,QAAgC,SAAtE,mBAAOsT,EAAP,KAAoBC,EAApB,KAKMhL,EAAc,SAACiL,EAAOC,GACX,cAAXA,GAGJ7E,GAAQ,IAOJxR,EAAUpB,KAChB,OACE,6BACE,kBAAC0X,GAAA,EAAD,CACEtS,IAAK,2BACLuS,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdhM,KAAMA,EACNiM,iBAAkB,IAClB/K,QAASR,EACTwL,SAhBe,WACnBR,OAAeS,IAgBXhU,QAASsT,GAA4B,QACrCzP,OACE,kBAAC,IAAMoQ,SAAP,KACE,kBAACzN,GAAA,EAAD,CACEC,aAAW,QACXtE,MAAM,UACNvB,UAAWxD,EAAQgW,MACnBhR,QAASmG,GAET,kBAAC,KAAD,WClCd,IAAMvM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiR,OAAQ,CACJvQ,OAAQV,EAAMI,QAAQ,IAE1B4X,YAAY,CACR9X,MAAO,QAEXD,KAAK,CACDwN,SAAU,WACV1D,QAAQ,SACR7J,MAAO,QAEX8J,MAAO,CACH1J,QAAS,YA+NF2X,OAzNf,SAAetY,GACX,IAAMuB,EAAUpB,KAChB,EAA8BqB,mBAAS,IAAvC,mBAAO2C,EAAP,KAAgBoU,EAAhB,KACA,EAAwB/W,mBAAS,IAAjC,mBAAOgX,EAAP,KAAaC,EAAb,KACA,EAA8BjX,mBAAS,IAAvC,mBAAOkX,EAAP,KAAgBC,EAAhB,KACA,EAA2BnX,oBAAS,GAApC,mBAAOoX,EAAP,KAAcC,EAAd,KACMC,EAAYC,iBAAO,MACzB,EAAgBvL,qBAAW9D,IAApB3B,EAAP,oBACA,EAA0BvG,mBAASuG,EAAMgB,WAAzC,mBAAOiL,EAAP,KAAcC,EAAd,KACA,EAAsCzS,mBAAS,IAA/C,mBAAO0S,EAAP,KAAoBC,EAApB,KACA,EAA8C3S,oBAAS,GAAvD,mBAAOwX,EAAP,KAAwBC,EAAxB,KACA,EAAkDzX,mBAAS,CAAC0X,MAAK,EAAO/U,QAAS,KAAjF,mBAAOgV,EAAP,KAA0BC,EAA1B,KAGArW,qBAAU,WACNkR,GAAS,SAAAD,GACL,OAAOjM,EAAMgB,eAElB,CAAChB,EAAMgB,YAGV,IA0BMsQ,EAAgB,SAACnW,GAEnB,GADAA,EAAEC,iBACCgB,GAAWuU,EAAQ,CAClB,IAAIxU,EAAM,CACNoV,KAAMnV,EACNmR,WAAY,MAEhB,GAAGoD,EAAQ,CACP,IAAM9U,EAAO,IAAI2V,SACjB3V,EAAK4V,OAAO,OAAQhB,GAEpBjV,IAAMC,KADY2G,+BACIvG,GACrB6V,MAAK,SAAAC,GACgB,MAAfA,EAAIjW,SACHS,EAAIoR,WAAaoE,EAAI9V,KAAK+V,SAC1B3Z,EAAM4Z,OAAO1V,GACbqU,EAAW,IACXI,EAAW,IACXF,EAAQ,QAGfoB,OAAM,SAAA3W,GACH,IAAIQ,EAAe,KAIfA,EAFDR,EAAES,SAASC,KAEIV,EAAES,SAASC,KAAKO,QAGhB,6CAGlBiV,EAAqB,CACjBF,MAAM,EACN/U,QAAST,IAGbV,YAAW,WACPoW,EAAqB,CACjBF,MAAM,EACN/U,SAAS,MAEd,aAKPnE,EAAM4Z,OAAO1V,GACbqU,EAAW,IACXI,EAAW,IACXF,EAAQ,MAyCdqB,EAAc,SAACrY,GAEjB,IAAIsY,EAAiB5V,EAAQ6V,YAAY,KACrCC,EAAkB9V,EAAQ+V,MAAM,EAAGH,EAAiB,GACxDxB,EAAW0B,EAAkBxY,EAAY,KACzCqX,EAAUnN,QAAQwO,QAClBlB,GAAmB,IAKnBmB,EAAsB,KAa1B,OAZIpG,EAAMvP,OAAS,IACf2V,EAAsBpG,EAAMlQ,KAAI,SAACC,EAAIuB,GACjC,OAAO,wBAAIC,IAAKxB,EAAG2E,IAAKnC,QAAS,kBAAMuT,EAAY/V,EAAGtC,YAAYsC,EAAGtC,cAI1EyS,EAAYzP,OAAS,IACpB2V,EAAsBlG,EAAYpQ,KAAI,SAACC,EAAIuB,GACvC,OAAO,wBAAIC,IAAKxB,EAAG2E,IAAKnC,QAAS,kBAAMuT,EAAY/V,EAAGtC,YAAYsC,EAAGtC,cAKzE,0BAAMsD,UAAWxD,EAAQ8W,YAAanT,SAAUmU,EAAegB,YAAU,EAAC1U,aAAa,OAClFwT,EAAkBD,KAAO,kBAAC1B,GAAD,CAAcrT,QAASgV,EAAkBhV,UAAc,KACjF,kBAACgB,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAI,GAAIlE,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOG,QAAS,GACjE,yBAAKsE,UAAU,oBACV2T,EACG,kBAAC,IAAMN,SAAP,KACI,kBAAC,KAAD,CAAYrT,UAAU,oBAAoBwB,QA9CxC,SAACrD,GACvByV,EAAW,IACXF,EAAQ,OA6CY,yBAAKtF,IAAKuF,EAAS3T,UAAU,qBAAqBmO,IAAI,aAE5D,MAEL0F,EACG,yBAAK7T,UAAU,eACX,kBAAC,KAAD,CAAQuV,IAAK,SAAUC,aAAa,EAAOC,eAAe,EAAOC,SAhDpE,SAACvX,GACd,IAAIwX,EAAMxX,EAAEyX,QAAQC,MAAM,KACtBC,EAAa,GACjBH,EAAII,SAAQ,SAAA/W,GAAE,OAAI8W,EAAW5W,KAAK,KAAOF,MACzC,IAAI6U,EAAQrU,OAAOwW,cAAP,MAAAxW,OAAwBsW,GACpCtC,GAAW,SAAApU,GAAO,OAAIA,EAAU,IAAMyU,KACtCC,GAAU,GACVC,EAAUnN,QAAQwO,SAyCmFpI,MAAO,CAAEjE,SAAU,WAAYC,OAAQ,OAAQC,MAAO,WACtI,KAEb,kBAAC7I,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAI,EAAGhF,QAAS,GAChCuY,EACG,wBAAIjU,UAAU,mBACTqV,GAEP,KACF,kBAAC1U,EAAA,EAAD,CACI1B,GAAG,iBACHgX,SAAUlC,EACV9S,MAAO7B,EACP+B,SAxKG,SAAChD,GACpB,IAAIgB,EAAMhB,EAAEiD,OAAOH,MACfiV,EAAa/W,EAAIA,EAAIO,OAAS,GAChB,MAAfwW,GAAoBhC,GAAmB,GACxB,MAAfgC,GAAuBjC,GACtBC,GAAmB,GAEvB,IAAIc,EAAiB7V,EAAI8V,YAAY,KACrC,GAAGD,GAAkB,EAAE,CAEnB,IAAMmB,EAAahX,EAAIgW,MAAMH,EAAiB,GAC9C,GAAGmB,EAAW,CACV,IAAMhH,EAAcF,EAAMpC,QAAO,SAAC7N,EAAIC,GAClC,OAAOD,EAAGtC,SAAS+C,cAAcqN,OAAOqJ,EAAW1W,gBAAkB,KAGrE0P,EAAYzP,OAAS,GAAG0P,EAAeD,QAG3CC,EAAe,IAIvBoE,EAAWrU,IAkJKa,UAAU,eACVgB,MAAM,aAGd,kBAACZ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAI,EAAGhF,QAAS,GACjC,2BAAO0a,OAAO,UAAUjV,SAAU,SAAChD,GAAD,OA7FxB,SAACA,GACvBA,EAAEC,iBAGF,IAAIqV,EAAOtV,EAAEiD,OAAOiV,MAAM,GAC1B,GAAI5C,EAAJ,CAEAtV,EAAEiD,OAAOH,MAAQ,GAEjB,IAAIqV,EAAS,IAAIC,WACjBD,EAAOE,cAAc/C,GAErB6C,EAAOG,UAAY,SAAUC,GACzB9C,EAAW0C,EAAO3W,QAClB+T,EAAQD,KA+EwCkD,CAAkBxY,IAAI6B,UAAWxD,EAAQ8I,MAAOrG,GAAG,mBAAmBoC,KAAK,SAMnH,kBAACuE,GAAA,EAAD,CAAYrE,MAAM,UAAUvB,UAAWxD,EAAQ+P,OAAQ1G,aAAW,YAAYrE,QAAS,kBAAMsS,GAAWD,KACpG,kBAAC,KAAD,OAEJ,kBAACvS,EAAA,EAAD,CACIC,MAAM,UACNvB,UAAWxD,EAAQ+P,OACnB/K,QAAS8S,GAEV,kBAAC,KAAD,kBC3OjBlZ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiR,OAAQ,CACNvQ,OAAQV,EAAMI,QAAQ,IAExBH,KAAM,CACF8J,QAAQ,SAKC,SAASuR,GAAQ3b,GAC9B,IAAMuB,EAAUpB,KAChB,EAAgBqN,qBAAW9D,IAApB3B,EAAP,oBAaA,OACE,kBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAI,GAAIlE,QAAS,CAACjB,KAAMiB,EAAQjB,MAAOG,QAAS,GACjE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAOmZ,OAdS,SAAC1V,GACrB,IAAM3E,EAAQD,IACRsE,EAAO,CACXiJ,KAAM9E,EAAMO,YACZpE,MACAkP,KAAMrL,EAAMmB,YAAYzH,SACxBX,OAAOiH,EAAMmB,YAAYpI,QAE3BmJ,GAAO+C,KAAK,SAAUzN,EAAOqE,O,8CClB3BzD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ8P,SAAU,GAEZ1P,MAAO,CACL0J,QAAS/J,EAAMI,QAAQ,GACvBmb,UAAW,SACXtV,MAAOjG,EAAMY,QAAQqY,KAAKpY,eAIf,SAAS2a,KACtB,IAAMtc,EAAQD,IACRiC,EAAUpB,KAChB,EAA0BqN,qBAAW9D,IAArC,mBAAO3B,EAAP,KAAcgC,EAAd,KACA,EAAgDvI,oBAAS,GAAzD,mBAAOsa,EAAP,KAA4BC,EAA5B,KAEAhZ,qBAAU,WACRkH,GAAO+C,KAAK,UAAWzN,KACtB,IAEHwD,qBAAU,WACRkM,MACC,IAEH,IAAMA,EAAoB,WACxBhF,GAAOiF,GAAG,qBAAqB,SAAAtL,GAC7BmY,GAAiB,GACjB/Y,YAAW,WACT+Y,GAAiB,KAChB,SAIHC,EAAsB,EACtBC,EAAqB,EACrBC,EAAsB,EAkB1B,OAjBInU,EAAMI,aAAgBJ,EAAMK,aAKvBL,EAAMI,aAAgBJ,EAAMK,eACnC4T,EAAsB,EAClBjU,EAAMI,aAKR8T,EAAqB,EACrBC,EAAsB,IALtBD,EAAqB,EACrBC,EAAsB,KARxBF,EAAsB,GACtBC,EAAqB,EACrBC,EAAsB,GAetB,yBAAKnX,UAAWxD,EAAQjB,MACrBwb,EACC,kBAACtE,GAAD,CACErT,QAAQ,sBACJ,KAER,kBAACgB,EAAA,EAAD,CAAMC,WAAS,EAAC3E,QAAS,EAAGsE,UAAU,qBACpC,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAIwW,EAAoBxb,QAAS,GACnDsH,EAAMI,YAAc,kBAAC,GAAD,MAAkB,kBAAC,KAAD,CAAiB7B,MAAM,UAAUvB,UAAU,oBAAoBwB,QAAS,kBAAMwD,EAAS,CAAC3D,KAAMyB,EAAsBK,SAAS,QAEtK,kBAAC/C,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAIuW,EAAqBvb,QAAS,GACrD,kBAAC,GAAD,OAEF,kBAAC0E,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAIyW,EAAqBzb,QAAS,GACpDsH,EAAMK,aAAe,kBAAC,GAAD,MAAmB,kBAAC,KAAD,CAAYrD,UAAU,qBAAqBwB,QAAS,kBAAMwD,EAAS,CAAC3D,KAAMyB,EAAuBK,SAAS,UCtD9IiU,OAnBf,WACE,IAAMC,EAAY5c,aAAaC,QAAQ,iBACvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4c,KAAK,SAASC,OAAK,GACvBF,EAAY,kBAAC,GAAD,KAAO,kBAACP,GAAD,OAAmB,kBAAC,EAAD,OAEzC,kBAAC,IAAD,CAAOQ,KAAK,UAAUC,OAAK,GACxBF,EAAY,kBAAC,GAAD,KAAO,kBAACP,GAAD,OAAmB,kBAACva,EAAD,OAEzC,kBAAC,IAAD,CAAO+a,KAAK,KACV,kBAAC,GAAD,KACGD,EAAY,kBAACP,GAAD,MAAW,kBAAC,EAAD,UCXdU,QACW,cAA7B7c,OAAOC,SAAS6c,UAEe,UAA7B9c,OAAOC,SAAS6c,UAEhB9c,OAAOC,SAAS6c,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMvE,SAAP,KACE,kBAAC,IAAD,KACA,kBAAC,GAAD,QAGFwE,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdrD,OAAM,SAAApQ,GACL0T,QAAQ1T,MAAMA,EAAMtF,c","file":"static/js/main.8785d690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/message.f2f08457.ogg\";","export const email_validate_pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const checkToken = () => {\r\n    const token = localStorage.getItem('chatUserToken');\r\n    if (!token) return window.location.reload(false);\r\n    return token;\r\n}\r\n\r\nexport const removeToken = () => {\r\n    const token = localStorage.getItem('chatUserToken');\r\n    if (token) localStorage.removeItem('chatUserToken');\r\n    return window.location.reload(false);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Link from '@material-ui/core/Link';\r\nimport {Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {email_validate_pattern} from '../../utils/helpers';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n\r\n  const [fullName, setFullName] = useState('');\r\n  const [fullNameError, setFullNameError] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n  const [passwordConfirmationError, setPasswordConfirmationError] = useState('');\r\n  const [serverError, setServerError] = useState('');\r\n  const [registerSuccesss, setRegisterSuccess] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n//${process.env.REACT_APP_BACKEND_URL}\r\n  useEffect(() => {\r\n    if(registerSuccesss){\r\n      setTimeout(() => {\r\n        setRedirect(true);\r\n      }, 3000);\r\n    }\r\n  }, [registerSuccesss])\r\n\r\n  const signupFormHandler = (e) => {\r\n    e.preventDefault();\r\n    const formValidated = validateForm();\r\n    if(formValidated){\r\n      registerUser();\r\n    }\r\n  }\r\n\r\n  const registerUser = async () => {\r\n    try {\r\n        const fetchResponse = await axios.post(`/signup`, {\r\n            fullName,\r\n            email,\r\n            password\r\n          });\r\n          if(fetchResponse.status === 201){\r\n            setRegisterSuccess(true);\r\n          }\r\n        return true;\r\n    } catch (e) {\r\n        let errorMessage = [];\r\n        if (e.response.data) {\r\n          if (e.response.data.errors) {\r\n            e.response.data.errors.map((el, id) => {\r\n              errorMessage.push(el.msg);\r\n            });\r\n          } else {\r\n            errorMessage.push(e.response.data.message);\r\n          }\r\n        } else {\r\n          errorMessage.push('Some error occurs, please try again later');\r\n        }\r\n        setServerError(errorMessage);\r\n        return false;\r\n    }    \r\n\r\n}\r\n\r\n  const validateForm = () => {\r\n    setServerError([]);\r\n    setFullNameError('');\r\n    setEmailError('');\r\n    setPasswordError('');\r\n    setPasswordConfirmationError('');\r\n    let hasErrors = false;\r\n    const emailTest = email_validate_pattern.test(String(email).toLowerCase());\r\n\r\n    if(!fullName){\r\n      hasErrors = true;\r\n      setFullNameError('Full name input is required!');\r\n    }\r\n    if(!email){\r\n      hasErrors = true;\r\n      setEmailError('Email field required!');\r\n    }\r\n    else if(!emailTest){\r\n      hasErrors = true;\r\n      setEmailError('Wrong email format!');\r\n    }\r\n    if(!password){\r\n      hasErrors = true;\r\n      setPasswordError('Password field required!');\r\n    }\r\n    else if(password !== passwordConfirmation){\r\n      hasErrors = true;\r\n      setPasswordError('Password and password confirmation fields are not equal!');\r\n    }\r\n    else if(password.length < 8 || passwordConfirmation.length < 8){\r\n      hasErrors = true;\r\n      setPasswordError('Password and password confirmation fields should have at least 8 characters!');\r\n    }\r\n    if(!passwordConfirmation){\r\n      hasErrors = true;\r\n      setPasswordConfirmationError('Password confirmation field required!');\r\n    }\r\n    if(hasErrors) return false;\r\n    return true;\r\n  }\r\n\r\n  \r\n\r\n  let result = (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={signupFormHandler}>\r\n          <Grid container spacing={2}>\r\n            <div className=\"singup-errors\">\r\n              {fullNameError ? \r\n                <Alert className=\"msg alert-msg\" severity=\"error\">\r\n                    {fullNameError}\r\n                </Alert> : null}\r\n              {emailError ? \r\n                <Alert className=\"msg alert-msg\" severity=\"error\">\r\n                    {emailError}\r\n                </Alert> : null}\r\n              {passwordError ? \r\n                <Alert className=\"msg alert-msg\" severity=\"error\">\r\n                    {passwordError}\r\n                </Alert> : null}\r\n              {passwordConfirmationError ? \r\n                <Alert className=\"msg alert-msg\" severity=\"error\">\r\n                    {passwordConfirmationError}\r\n                </Alert> : null}\r\n              {serverError.length > 0 ? \r\n                serverError.map((message,idx) => {\r\n                  return <Alert key={idx} className=\"msg alert-msg\" severity=\"error\">{message}</Alert>;\r\n                })\r\n              : null}\r\n            </div>\r\n            <div className=\"singup-success\">\r\n              {registerSuccesss ? \r\n                <Alert className=\"msg success-msg\" severity=\"success\">\r\n                    Registration completed, you will be redirected in login page now...\r\n                </Alert> : null}\r\n            </div>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Full Name\"\r\n                value={fullName}\r\n                autoFocus\r\n                onChange={(e) => setFullName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"repeat-password\"\r\n                label=\"Repeat Password\"\r\n                type=\"password\"\r\n                id=\"repeat-password\"\r\n                value={passwordConfirmation}\r\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={signupFormHandler}\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n\r\n  if(redirect) result = <Redirect to=\"/login\" />;\r\n\r\n  return result;\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport {email_validate_pattern} from '../../utils/helpers';\r\nimport '../../App.css';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100%',\r\n\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(0),\r\n    },\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [serverError, setServerError] = useState('');\r\n  const [loginSuccessFull, setloginSuccessFull] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(loginSuccessFull){\r\n      setTimeout(() => {\r\n        setRedirect(true);\r\n      }, 3000);\r\n    }\r\n  }, [loginSuccessFull])\r\n\r\n  const loginFormHandler = (e) => {\r\n    e.preventDefault();\r\n    const formValidated = validateForm();\r\n    if(formValidated){\r\n      loginUser();\r\n    }\r\n  }\r\n\r\n  const validateForm = () => {\r\n    setServerError([]);\r\n    setEmailError('');\r\n    setPasswordError('');\r\n    let hasErrors = false;\r\n    const emailTest = email_validate_pattern.test(String(email).toLowerCase());\r\n\r\n    if(!email){\r\n      hasErrors = true;\r\n      setEmailError('Email field required!');\r\n    }\r\n    else if(!emailTest){\r\n      hasErrors = true;\r\n      setEmailError('Wrong email format!');\r\n    }\r\n    if(!password){\r\n      hasErrors = true;\r\n      setPasswordError('Password field required!');\r\n    }\r\n\r\n    if(hasErrors) return false;\r\n    return true;\r\n  }\r\n//${process.env.REACT_APP_BACKEND_URL}\r\n  const loginUser = async () => {\r\n    try {\r\n        const fetchResponse = await axios.post(`/login`, {\r\n            email,\r\n            password\r\n          });\r\n          if(fetchResponse.status === 201){\r\n            setloginSuccessFull(true);\r\n            const token = fetchResponse.data.token;\r\n            localStorage.setItem('chatUserToken', token);\r\n          }\r\n        return true;\r\n    } catch (e) {\r\n        let errorMessage = [];\r\n        if (e.response.data) {\r\n          if(e.response.data.errors){\r\n            e.response.data.errors.map((el, id) => {\r\n              errorMessage.push(el.msg);\r\n            });\r\n          }\r\n          else{\r\n            errorMessage.push(e.response.data.message);\r\n          }\r\n        }\r\n        else{\r\n          errorMessage.push('Some error occurs, please try again later');\r\n        }\r\n        setServerError(errorMessage);\r\n        return false;\r\n    }    \r\n\r\n}\r\n\r\n\r\n\r\nlet result = (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={loginFormHandler}>\r\n            <div className=\"login-errors\">\r\n              {emailError ? \r\n                <Alert className=\"msg alert-msg\" severity=\"error\">\r\n                    {emailError}\r\n                </Alert> : null}\r\n              {passwordError ? \r\n                <Alert className=\"msg alert-msg\" severity=\"error\">\r\n                    {passwordError}\r\n                </Alert> : null}\r\n              {serverError.length > 0 ? \r\n                serverError.map((message,idx) => {\r\n                  return <Alert key={idx} className=\"msg alert-msg\" severity=\"error\">{message}</Alert>;\r\n                })\r\n              : null}\r\n              {loginSuccessFull ? \r\n                <Alert className=\"msg success-msg\" severity=\"success\">\r\n                  Login completed, you will be redirected to the chat soon\r\n                </Alert>\r\n              : null}\r\n            </div>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"email\"\r\n              value={email}\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={loginFormHandler}\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item>\r\n                <div className=\"about-cover\">\r\n                  <a href=\"https://github.com/huseyn0w/Realtime-Chat\" target=\"_blank\" className=\"about-links\">About the app</a>\r\n                  <a href=\"https://huseyn0w.github.io\" target=\"_blank\" className=\"about-links\">About the author</a>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  if(redirect) result = window.location.reload(false);;\r\n\r\n  return result;\r\n}","export const actions = {\r\n    LOAD_ROOMS: \"LOAD_ROOMS\",\r\n    NEW_MESSAGE: \"NEW_MESSAGE\",\r\n    NEW_USER: \"NEW_USER\",\r\n    NEW_ROOM: \"NEW_ROOM\",\r\n    LEFT_SIDEBAR: \"LEFT_SIDEBAR\",\r\n    RIGHT_SIDEBAR: \"RIGHT_SIDEBAR\",\r\n    CURRENT_ROOM: \"CURRENT_ROOM\",\r\n    CREATE_ROOM: \"CREATE_ROOM\",\r\n    UPDATE_ROOM: \"UPDATE_ROOM\",\r\n    DELETE_ROOM: \"DELETE_ROOM\",\r\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n    LOGOUT_CHAT: \"LOGOUT_CHAT\",\r\n    UPDATE_USERS_LIST: \"UPDATE_USERS_LIST\",\r\n    UPDATE_CURRENT_USER: \"UPDATE_CURRENT_USER\",\r\n    UPDATE_CURRENT_USER_IN_USERS_LIST: \"UPDATE_CURRENT_USER_IN_USERS_LIST\",\r\n    USER_LEFT: \"USER_LEFT\",\r\n    USER_DATA_UPDATED: \"USER_DATA_UPDATED\",\r\n}","import {actions} from './actions';\r\n\r\nconst Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.LOAD_ROOMS:\r\n            return {\r\n                ...state,\r\n                rooms: action.payload,\r\n            };\r\n        case actions.LEFT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                leftSidebar: action.payload,\r\n            };\r\n        case actions.RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                rightSidebar: action.payload,\r\n            };\r\n        case actions.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                logged: true,\r\n            };\r\n        case actions.LOGOUT_CHAT:\r\n            return {\r\n                ...state,\r\n                logged: false,\r\n            };\r\n        case actions.CURRENT_ROOM:\r\n            return {\r\n                ...state,\r\n                currentRoom: action.payload,\r\n            };\r\n        case actions.CREATE_ROOM:\r\n            const oldRooms = [...state.rooms];\r\n            const newRoomExist = oldRooms.findIndex(x => x._id === action.payload._id);\r\n            if(newRoomExist === - 1){\r\n                oldRooms.push(action.payload);\r\n                return {\r\n                    ...state,\r\n                    rooms: oldRooms,\r\n                };\r\n            }\r\n            return state;\r\n            \r\n        case actions.UPDATE_ROOM:\r\n            const updatedRooms = [...state.rooms];\r\n            const updateArrayIndex = updatedRooms.findIndex(x => x._id === action.payload._id);\r\n            updatedRooms[updateArrayIndex] = action.payload;\r\n            return {\r\n                ...state,\r\n                rooms:updatedRooms,\r\n            };\r\n        case actions.DELETE_ROOM:\r\n            const rooms = [...state.rooms];\r\n            const arrayIndex = rooms.findIndex(x => x._id === action.payload);\r\n            rooms.splice(arrayIndex, 1);\r\n            return {\r\n                ...state,\r\n                rooms,\r\n            };\r\n        case actions.UPDATE_USERS_LIST:\r\n            return {\r\n                ...state,\r\n                roomUsers:action.payload\r\n            };\r\n        case actions.UPDATE_CURRENT_USER_IN_USERS_LIST:\r\n            const currentUsersList = [...state.roomUsers];\r\n            const currentUserArrayIndex = currentUsersList.findIndex(x => x._id === action.payload._id);\r\n            currentUsersList[currentUserArrayIndex] = action.payload;\r\n            return {\r\n                ...state,\r\n                roomUsers: currentUsersList\r\n            };\r\n        case actions.UPDATE_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            };\r\n        case actions.USER_LEFT:\r\n            const usersList = [...state.roomUsers];\r\n            const userArrayIndex = usersList.findIndex(x => x._id === action.payload);\r\n            usersList.splice(userArrayIndex, 1);\r\n            return {\r\n                ...state,\r\n                roomUsers: usersList\r\n            };\r\n        case actions.USER_DATA_UPDATED:\r\n            const currentUserObj = {...state.currentUser};\r\n            currentUserObj.email = action.payload.email;\r\n            currentUserObj.avatar = action.payload.avatar;\r\n            currentUserObj.fullName = action.payload.fullName;\r\n            \r\n            return {\r\n                ...state,\r\n                currentUser: currentUserObj\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer;","import React, {createContext, useReducer} from \"react\";\r\nimport Reducer from '../reducers/Reducer';\r\n\r\n\r\nconst currentUser = {\r\n    _id:'-',\r\n    fullName: '-',\r\n    email: '-'\r\n};\r\n\r\nconst initialState = {\r\n    leftSidebar:true,\r\n    rightSidebar:true,\r\n    logged:false,\r\n    activeUsers: [],\r\n    rooms: [],\r\n    currentRoom: null,\r\n    currentUser,\r\n    roomUsers: [],\r\n    messages: [],\r\n    error: null\r\n};\r\n\r\nconst Store = ({children}) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n    return (\r\n        <Context.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n};\r\n\r\nexport const Context = createContext(initialState);\r\nexport default Store;","import io from \"socket.io-client\";\r\nconst socket = io(process.env.REACT_APP_BACKEND_URL, {'sync disconnect on unload': true });\r\nexport default socket;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '0',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(0),\r\n    flex: 1,\r\n    padding:'0 15px 0 0'\r\n  },\r\n  iconButton: {\r\n    padding: '10 0',\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function Search(props) {\r\n  const classes = useStyles();\r\n\r\n  const SearchHandler = (e) => {\r\n    const val = e.target.value;\r\n    props.handler(val);\r\n  }\r\n\r\n  return (\r\n    <Paper component=\"div\" className={classes.root}>\r\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder={props.placeholderText}\r\n        inputProps={{ 'aria-label': props.placeholderText }}\r\n        onChange={SearchHandler}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nexport default class SpringScrollbars extends Component {\r\n\r\n    scrollbars = React.createRef();\r\n\r\n    state = {\r\n        mounted: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            mounted: true\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.scrolltobottom && this.props.scrolltobottom === '1') {\r\n            this.state.mounted && this.scrollbars.current.scrollToBottom();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Scrollbars\r\n                {...this.props}\r\n                ref={this.scrollbars}/>\r\n        );\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport socket from '../../../../utils/socket';\r\nimport {checkToken} from '../../../../utils/helpers';\r\n\r\nexport default function CreateUpdate(props) {\r\n\r\n  const {open, headline, action, saveHeadline, currentRoom} = props;\r\n  const [roomName, setRoomName] = useState(currentRoom.name ?? '');\r\n  const [roomTopic, setRoomTopic] = useState(currentRoom.topic ?? '');\r\n  const [roomPassword, setRoomPassword] = useState('');\r\n\r\n  const handleClose = () => {\r\n    props.closeDialog();\r\n  };\r\n\r\n \r\n\r\n  const newRoomHandler = (e) => {\r\n      e.preventDefault();\r\n      const token = checkToken();\r\n      if(roomName && roomTopic){\r\n          const data = {\r\n              token,\r\n              room: {\r\n                name: roomName,\r\n                topic: roomTopic,\r\n                password: roomPassword ?? null\r\n              }\r\n          }\r\n          if(action === \"new\"){\r\n            data.action = \"create\";\r\n            const roomID = roomName.replace(/[\\s#@!%&*()_+=\"ə~Ё/|<>,.;:?+\\\\]/g, \"-\").toLowerCase();\r\n            data.room.id = roomID;\r\n          }\r\n          else{\r\n            data.action = \"update\";\r\n            data.room._id = currentRoom._id;\r\n          }\r\n          socket.emit('roomHandler', data);\r\n          props.closeDialog();\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{headline}</DialogTitle>\r\n        <form onSubmit={newRoomHandler}>\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"roomname\"\r\n                    label=\"Room name\"\r\n                    type=\"text\"\r\n                    value={roomName}\r\n                    onChange={(e) => setRoomName(e.target.value)}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    id=\"roomtopic\"\r\n                    label=\"Room topic\"\r\n                    type=\"text\"\r\n                    value={roomTopic}\r\n                    onChange={(e) => setRoomTopic(e.target.value)}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    id=\"roomPassword\"\r\n                    label=\"Room password\"\r\n                    type=\"Password\"\r\n                    value={roomPassword}\r\n                    onChange={(e) => setRoomPassword(e.target.value)}\r\n                    fullWidth\r\n                />\r\n            \r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button type=\"submit\" onClick={newRoomHandler} color=\"primary\">\r\n                {saveHeadline}\r\n            </Button>\r\n            </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport socket from '../../../../utils/socket';\r\nimport {checkToken} from '../../../../utils/helpers';\r\nimport {Context} from '../../../../store/Store';\r\n\r\nexport default function RemoveDialog(props) {\r\n\r\n  const {open, currentRoom} = props;\r\n\r\n  const [state] = useContext(Context);\r\n\r\n\r\n  const removeRoom = (e) => {\r\n    const token = checkToken();\r\n    socket.emit('roomHandler', {\r\n        token,\r\n        room: currentRoom,\r\n        defaultRoom: state.rooms[0]\r\n    });\r\n    props.closeDialog();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => props.closeDialog()}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Remove the room</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure? All room members will be transfered to the \"Guest room\", and room will be removed completely.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => props.closeDialog()} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={removeRoom} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useContext, Fragment} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {Context} from '../../../store/Store';\r\nimport {actions} from '../../../reducers/actions';\r\nimport CreateUpdateDialog from './Dialogs/CreateUpdate';\r\nimport RemoveDialog from './Dialogs/Remove';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(0),\r\n        },\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    absolute: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(0),\r\n        right: theme.spacing(3),\r\n    },\r\n    customButtons: {\r\n        padding:'0 5px',\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction LeftButtons(props) {\r\n    const classes = useStyles();\r\n    const [state, dispatch] = useContext(Context);\r\n    const [createDialog, openCreateDialog] = useState(false);\r\n    const [updateDialog, openUpdateDialog] = useState(false);\r\n    const [deleteDialog, openDeleteDialog] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     socket.on(\"room-changed\", data => {\r\n    //         setCurrentRoom(data.room);\r\n    //         console.log(data.room);\r\n    //     });\r\n    // }, [])\r\n\r\n    const handleCreateDialog = () => {\r\n        openCreateDialog(true);\r\n    };\r\n\r\n    const handleUpdateDialog = () => {\r\n        openUpdateDialog(true);\r\n    };\r\n\r\n    const handleDeleteDialog = () => {\r\n        openDeleteDialog(true);\r\n    };\r\n\r\n    const hideSidebarHandler = (e) => {\r\n        dispatch({type: actions.LEFT_SIDEBAR, payload: false});\r\n    }\r\n\r\n    // if(state.currentRoom !== null){\r\n    //     console.log('state id ' + state.currentRoom._id);\r\n    //     console.log('env id ' + process.env.REACT_APP_GUEST_ROOM_ID);\r\n\r\n    //     console.log(process.env.REACT_APP_GUEST_ROOM_ID == state.currentRoom._id);\r\n    // }\r\n    \r\n    \r\n    return (\r\n        <div className=\"leftButtons\">\r\n            <Grid container classes={{root: classes.root}} item xs={12} spacing={0}>\r\n                <Grid container classes={{root: classes.root}} item xs={10} spacing={0}>\r\n                    <Tooltip title=\"Add room\">\r\n                        <IconButton color=\"primary\" onClick={handleCreateDialog} classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {state.currentRoom !== null && state.currentRoom._id !== process.env.REACT_APP_GUEST_ROOM_ID ?\r\n                    <Tooltip title=\"Rename room\">\r\n                        <IconButton color=\"primary\" onClick={handleUpdateDialog} classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    : null}\r\n                    {state.currentRoom !== null && state.currentRoom._id !== process.env.REACT_APP_GUEST_ROOM_ID ?\r\n                        <Tooltip title=\"Delete room\">\r\n                            <IconButton color=\"primary\" onClick={handleDeleteDialog} classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip> : null\r\n                    }  \r\n                </Grid>\r\n                <Grid container classes={{root: classes.root}} item xs={2} spacing={0}>\r\n                    <Tooltip title=\"Hide sidebar\">\r\n                        <IconButton color=\"primary\" onClick={hideSidebarHandler} classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                            <ArrowBackIosIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Fragment>\r\n                {createDialog ? \r\n                    <CreateUpdateDialog \r\n                        open={true} \r\n                        closeDialog={() => openCreateDialog(false)}\r\n                        headline=\"Create room\"\r\n                        saveHeadline=\"Save\"\r\n                        action=\"new\"\r\n                        currentRoom=\"\"\r\n                    />\r\n                : null}\r\n                \r\n                {updateDialog && state.currentRoom !== null && state.currentRoom._id !== process.env.REACT_APP_GUEST_ROOM_ID ? \r\n                    <CreateUpdateDialog \r\n                        open={true} \r\n                        closeDialog={() => openUpdateDialog(false)}\r\n                        headline=\"Update room\"\r\n                        saveHeadline=\"Update\"\r\n                        action=\"update\"\r\n                        currentRoom={state.currentRoom}\r\n                    />\r\n                : null}\r\n\r\n                {deleteDialog && state.currentRoom !== null && state.currentRoom._id !== process.env.REACT_APP_GUEST_ROOM_ID ? \r\n                    <RemoveDialog \r\n                        open={true} \r\n                        closeDialog={() => openDeleteDialog(false)}\r\n                        currentRoom={state.currentRoom}\r\n                    />\r\n                : null}\r\n                \r\n            </Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftButtons\r\n","import React, {useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport socket from '../../../../utils/socket';\r\nimport {checkToken} from '../../../../utils/helpers';\r\n\r\nexport default function PasswordCheck(props) {\r\n\r\n  const {open, headline, saveHeadline, currentRoom, authorFullName, passRoom} = props;\r\n  const [roomPassword, setRoomPassword] = useState(currentRoom.password ?? '');\r\n  const [wrongPass, setWrongPass] = useState(false);\r\n\r\n  useEffect(() => {\r\n      socketOnListeners();\r\n  }, []);\r\n\r\n  const socketOnListeners = () => {\r\n\r\n      socket.on(\"room-changed\", data => {\r\n          setRoomPassword('');\r\n          props.closeDialog();\r\n      });\r\n\r\n      socket.on(\"wrongPass\", data => {\r\n          setRoomPassword('');\r\n          setWrongPass(true);\r\n      });\r\n\r\n\r\n      return () => socket.disconnect();\r\n\r\n    }\r\n\r\n  const handleClose = () => {\r\n    props.closeDialog();\r\n  };\r\n\r\n\r\n  const changeRoomHandler = (e) => {\r\n      const token = checkToken();\r\n      e.preventDefault();\r\n      const data = {\r\n          passRoom,\r\n          author: authorFullName,\r\n          currentRoom,\r\n          roomPassword\r\n      };\r\n      socket.emit('roomAuthMiddleware', token, data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{wrongPass ? 'Wrong password' : headline}</DialogTitle>\r\n        <form onSubmit={changeRoomHandler}>\r\n            <DialogContent>\r\n                <TextField\r\n                    id=\"roomPassword\"\r\n                    label=\"Room password\"\r\n                    type=\"Password\"\r\n                    value={roomPassword}\r\n                    onChange={(e) => setRoomPassword(e.target.value)}\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button type=\"submit\" onClick={changeRoomHandler} color=\"primary\">\r\n                {saveHeadline}\r\n            </Button>\r\n            </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Inspired by the former Facebook spinners.\r\nconst useStylesFacebook = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  bottom: {\r\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    position: 'absolute',\r\n    left: '50%',\r\n    marginLeft:'-20px'\r\n  },\r\n  bottomLeft: {\r\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    position: 'absolute',\r\n    left: '15px',\r\n    marginLeft: '0'\r\n  },\r\n  top: {\r\n    color: '#1a90ff',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    marginLeft:'-20px'\r\n  },\r\n  topLeft: {\r\n    color: '#1a90ff',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: '15px',\r\n    marginLeft: '0'\r\n  },\r\n  circle: {\r\n    strokeLinecap: 'round',\r\n  },\r\n}));\r\n\r\nfunction Preloader(props) {\r\n  const classes = useStylesFacebook();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={props.showonleft === 'true' ? classes.bottomLeft : classes.bottom}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={props.showonleft === 'true' ? classes.topLeft : classes.top}\r\n        classes={{\r\n          circle: classes.circle,\r\n        }}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function CustomizedProgressBars(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Preloader showonleft={props.showonleft === 'true' ? 'true': 'false'} />\r\n    </div>\r\n  );\r\n}","import React,{useState, useContext, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Context} from '../../../store/Store';\r\nimport socket from '../../../utils/socket';\r\nimport Search from './Search';\r\nimport SpringScrollbars from '../../../utils/ScrollBar';\r\nimport LeftButtons from './LeftButtons';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {actions} from '../../../reducers/actions';\r\nimport PasswordCheck from './Dialogs/PasswordCheck';\r\nimport {checkToken, removeToken} from '../../../utils/helpers';\r\nimport Preloader from '../../Helpers/Preloader';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: '#EAF5F0',\r\n    padding: '0 15px'\r\n  },\r\n});\r\n\r\n\r\nfunction LeftSidebar() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    const [rooms, setRooms] = useState(state.rooms);\r\n    const [SearchRooms, setSearchRooms] = useState([]);\r\n    const [currentRoom, setCurrentRoom] = useState(state.currentRoom);\r\n    const [passRoom, setPassRoom] = useState('');\r\n    const [showPassDialog, openPassDialog] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        setRooms(rooms => {\r\n            return state.rooms;\r\n        });\r\n        setCurrentRoom(state.currentRoom);\r\n    }, [state.rooms, state.currentRoom]);\r\n\r\n    useEffect(() => {\r\n        socketOnListeners();\r\n    }, []);\r\n\r\n    const socketOnListeners = () => {\r\n\r\n      socket.on(\"tokenError\", removeToken);\r\n\r\n      socket.on(\"joinCompleted\", data => {\r\n        if(data.currentUser && data.currentUser !== null){\r\n            dispatch({type: actions.UPDATE_CURRENT_USER, payload: data.currentUser }); \r\n        }\r\n        if(data.roomsList.rooms && data.roomsList.rooms.length > 0){\r\n            dispatch({type: actions.LOAD_ROOMS, payload: data.roomsList.rooms}); \r\n            \r\n            if(data.currentRoom && data.currentRoom !== null){\r\n                dispatch({type: actions.CURRENT_ROOM, payload: data.currentRoom}); \r\n            }\r\n        }\r\n      });\r\n\r\n      socket.on(\"newUserArrived\", data => {\r\n            if(data.roomsList.rooms && data.roomsList.rooms.length > 0){\r\n                dispatch({type: actions.LOAD_ROOMS, payload: data.roomsList.rooms}); \r\n                \r\n                if(data.currentRoom && data.currentRoom !== null){\r\n                    dispatch({type: actions.CURRENT_ROOM, payload: data.currentRoom}); \r\n                }\r\n            }\r\n        });\r\n\r\n      socket.on(\"room-changed\", data => {\r\n          dispatch({type: actions.CURRENT_ROOM, payload: data.room}); \r\n      });\r\n\r\n      socket.on(\"roomCreated\", data => {\r\n          dispatch({type: actions.CREATE_ROOM, payload: data});\r\n      });\r\n\r\n      socket.on(\"roomUpdated\", room => {\r\n          dispatch({type: actions.UPDATE_ROOM, payload: room});\r\n      });\r\n\r\n\r\n      socket.on(\"roomDeleted\", room => {\r\n          dispatch({type: actions.DELETE_ROOM, payload: room._id});\r\n      });\r\n\r\n\r\n      return () => socket.disconnect();\r\n\r\n    }\r\n\r\n    const roomHandler = (newRoom) => {\r\n        const token = checkToken();\r\n        if(newRoom.protected){\r\n            setPassRoom(newRoom);\r\n            openPassDialog(true);\r\n        }\r\n        else{\r\n            // console.log(currentRoom);\r\n            if(currentRoom._id !== newRoom._id){\r\n                socket.emit('change-room', token, currentRoom, newRoom, state.currentUser.fullName);\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const searchHandler = (room) => {\r\n        if(room){\r\n            const newRooms = rooms.filter((el, id) => {\r\n                return el.name.toLowerCase().search(room.toLowerCase()) > -1;\r\n            })\r\n\r\n            if (newRooms.length > 0) setSearchRooms(newRooms);\r\n        }\r\n        else{\r\n            setSearchRooms([])\r\n        }\r\n        \r\n    }\r\n\r\n    let roomsList = (\r\n        <div className=\"roomsPreloader\">\r\n            <Preloader />\r\n        </div>\r\n    );\r\n\r\n    if(rooms.length > 0){\r\n        roomsList = rooms.map((room, idx) => {\r\n            let arr_key = 0;\r\n            let selectedKey = 0;\r\n            if(rooms.length > 1) {\r\n                arr_key = room._id;\r\n                // console.log(currentRoom);\r\n                selectedKey = currentRoom === null ? 0 : currentRoom._id;\r\n            }\r\n            return (\r\n                    <ListItem\r\n                        button\r\n                        key={arr_key}\r\n                        selected={arr_key === selectedKey ? true : false}\r\n                        onClick={() => roomHandler(room)}\r\n                    >\r\n                    {arr_key=== selectedKey ?\r\n                    <ListItemIcon>\r\n                        <StarIcon />\r\n                    </ListItemIcon>  : null}\r\n                    <ListItemText primary={room.name} />\r\n                    {room.protected ? <LockIcon /> : null}\r\n                    \r\n                </ListItem>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n    if(SearchRooms.length > 0){\r\n       roomsList = SearchRooms.map((room) => {\r\n           let arr_key = 0;\r\n           let selectedKey = 0;\r\n           if (rooms.length > 1) {\r\n               arr_key = room._id;\r\n               selectedKey = currentRoom === null ? 0 : currentRoom._id;\r\n           }\r\n            return (\r\n                    <ListItem\r\n                    button\r\n                    key={arr_key}\r\n                    selected={arr_key === selectedKey ? true : false}\r\n                    onClick={() => roomHandler(room)}\r\n                    >\r\n                    {arr_key=== selectedKey ?\r\n                    <ListItemIcon>\r\n                        <StarIcon />\r\n                    </ListItemIcon>  : null}\r\n                    <ListItemText primary={room.name} />\r\n                    {room.protected ? <LockIcon /> : null}\r\n                </ListItem>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Grid container classes={{root: classes.root}} item xs={12} spacing={0}>\r\n            {showPassDialog ? \r\n                <PasswordCheck \r\n                    open={true}\r\n                    currentRoom={currentRoom}\r\n                    passRoom={passRoom}\r\n                    authorFullName={state.currentUser.fullName}\r\n                    closeDialog={() => openPassDialog(false)}\r\n                    headline=\"Enter password\"\r\n                    saveHeadline=\"Save\"\r\n                    action=\"new\"\r\n                />\r\n            : null}\r\n            <div className=\"leftSearch\">\r\n                <Search handler={searchHandler} placeholderText={'Filter room names'} />\r\n            </div>\r\n            <SpringScrollbars\r\n                autoHide={true}\r\n                style={{ width: '100%', height: '75vh' }}>\r\n                <div className=\"leftRooms\">\r\n                    <List component=\"nav\" aria-label=\"rooms-list\">\r\n                        {roomsList}\r\n                    </List>\r\n                </div>\r\n            </SpringScrollbars>\r\n            <LeftButtons />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LeftSidebar;\r\n","import React, {useContext} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport socket from '../../../../utils/socket';\r\nimport {checkToken} from '../../../../utils/helpers';\r\nimport {Context} from '../../../../store/Store';\r\nimport {actions} from '../../../../reducers/actions';\r\n\r\nexport default function ExitDialog(props) {\r\n\r\n  const {open} = props;\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const exitHandler = (e) => {\r\n    const token = checkToken();\r\n    const loggedUserFullName = state.currentUser.fullName;\r\n    socket.emit('userExited', {\r\n        token,\r\n        room: state.currentRoom._id,\r\n        fullName: loggedUserFullName\r\n    });\r\n    localStorage.removeItem('chatUserToken');\r\n    dispatch({type: actions.LOGOUT_CHAT});\r\n    props.closeDialog();\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => props.closeDialog()}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Exit the chat</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to leave the chat?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => props.closeDialog()} color=\"primary\">\r\n            Stay\r\n          </Button>\r\n          <Button onClick={exitHandler} color=\"primary\">\r\n            Exit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport socket from '../../../../utils/socket';\r\nimport {checkToken} from '../../../../utils/helpers';\r\nimport {actions} from '../../../../reducers/actions';\r\nimport {Context} from '../../../../store/Store';\r\nimport Preloader from '../../../Helpers/Preloader';\r\n\r\n\r\nexport default function Profile(props) {\r\n\r\n  const {open} = props;\r\n  const [state, dispatch] = useContext(Context);\r\n  const [fullName, setFullName] = useState(state.currentUser.fullName ?? '');\r\n  const [email, setEmail] = useState(state.currentUser.email ?? '');\r\n  const [avatar, setAvatar] = useState(state.currentUser.avatar ?? '');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [preloaderCondition, showPreloader] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n      socketOnListeners();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFullName(state.currentUser.fullName);\r\n    setEmail(state.currentUser.email);\r\n    setAvatar(state.currentUser.avatar);\r\n  }, [state.currentUser]);\r\n\r\n  const socketOnListeners = () => {\r\n\r\n    socket.on(\"userUpdateSuccess\", data => {\r\n      dispatch({type: actions.USER_DATA_UPDATED, payload: data});\r\n      dispatch({type: actions.UPDATE_CURRENT_USER_IN_USERS_LIST, payload: data});\r\n      props.closeDialog();\r\n      showPreloader(false);\r\n    });\r\n\r\n    socket.on(\"roomUserUpdated\", data => {\r\n      dispatch({type: actions.USER_DATA_UPDATED, payload: data});\r\n      dispatch({type: actions.UPDATE_CURRENT_USER_IN_USERS_LIST, payload: data});\r\n      props.closeDialog();\r\n      showPreloader(false);\r\n    });\r\n\r\n    \r\n\r\n\r\n    return () => socket.disconnect();\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.closeDialog();\r\n  };\r\n\r\n\r\n  const profileDataHandler = (e) => {\r\n      e.preventDefault();\r\n      const token = checkToken();\r\n      socket.emit('updateUserData', {\r\n        token,\r\n        fullName,\r\n        email,\r\n        newPassword,\r\n        avatar\r\n      })\r\n      showPreloader(true);\r\n      // props.closeDialog();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit profile details</DialogTitle>\r\n        {preloaderCondition ? <Preloader /> : null}\r\n        <form onSubmit={profileDataHandler}>\r\n            <DialogContent>\r\n                <TextField\r\n                    id=\"roomtopic\"\r\n                    label=\"Full Name\"\r\n                    type=\"text\"\r\n                    value={fullName}\r\n                    onChange={(e) => setFullName(e.target.value)}\r\n                    fullWidth\r\n                    className=\"profile-input-item\"\r\n                />\r\n                <TextField\r\n                    id=\"avatar\"\r\n                    label=\"Avatar URL\"\r\n                    type=\"text\"\r\n                    value={avatar}\r\n                    onChange={(e) => setAvatar(e.target.value)}\r\n                    fullWidth\r\n                    className=\"profile-input-item\"\r\n                />\r\n                <TextField\r\n                    id=\"roomtopic\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    fullWidth\r\n                    className=\"profile-input-item\"\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label=\"New password\"\r\n                    type=\"password\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button type=\"submit\" onClick={profileDataHandler} color=\"primary\">\r\n                Save\r\n            </Button>\r\n            </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext, Fragment} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {Context} from '../../../store/Store';\r\nimport {actions} from '../../../reducers/actions';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport ExitDialog from './Dialogs/ExitDialog';\r\nimport Profile from './Dialogs/Profile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(0),\r\n        },\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(0),\r\n    },\r\n    absolute: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(0),\r\n        right: theme.spacing(3),\r\n    },\r\n    customButtons: {\r\n        padding:'0 5px',\r\n    }\r\n}));\r\n\r\n\r\nfunction RightButtons() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    const [exitDialog, openExitDialog] = useState(false);\r\n    const [userData] = useState({\r\n        id: '-',\r\n        fullname: '-',\r\n        email: '-',\r\n        status: '-',\r\n        avatar: null\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const hideSidebarHandler = (e) => {\r\n        dispatch({type: actions.RIGHT_SIDEBAR, payload: false});\r\n    }\r\n\r\n    const openProfileDialog = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"rightButtons\">\r\n            <Profile\r\n                userData={userData}\r\n                open={open}\r\n                closeDialog={() => setOpen(false)}\r\n            />\r\n            <Grid container classes={{root: classes.root}} item xs={12} spacing={0}>\r\n                <Grid container classes={{root: classes.root}} item xs={10} spacing={0}>\r\n                    <Tooltip title=\"Profile\">\r\n                        <IconButton color=\"primary\" onClick={() => openProfileDialog()}  classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Exit\">\r\n                        <IconButton color=\"primary\" onClick={() => openExitDialog(true)}  classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                            <ExitToAppRoundedIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Grid>\r\n                <Grid container classes={{root: classes.root}} item xs={2} spacing={0}>\r\n                    <Tooltip title=\"Hide sidebar\">\r\n                        <IconButton color=\"primary\" onClick={hideSidebarHandler} classes={{root: classes.customButtons}} aria-label=\"add an alarm\">\r\n                            <ArrowBackIosIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Fragment>\r\n\r\n                {exitDialog ? \r\n                    <ExitDialog \r\n                        open={true} \r\n                        closeDialog={() => openExitDialog(false)}\r\n                    />\r\n                : null}\r\n                \r\n            </Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightButtons\r\n","import React, {useState, useEffect} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {checkToken} from '../../../../utils/helpers';\r\nimport Preloader from '../../../Helpers/Preloader';\r\nimport socket from '../../../../utils/socket';\r\n\r\nexport default function UserInfo(props) {\r\n\r\n    const {userData, openBox, currentUser, currentRoom} = props;\r\n    const [preloaderCondition, showPreloader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        socketOnListeners();\r\n    }, []);\r\n\r\n    const socketOnListeners = () => {\r\n        socket.on(\"userBanCompleted\", data => {\r\n            showPreloader(false);\r\n            props.onClose();\r\n        });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onClose();\r\n    };\r\n\r\n    const banHandler = (user) => {\r\n        showPreloader(true);\r\n        socket.emit('banUser', user, currentRoom._id);\r\n    }\r\n\r\n    return <Dialog open={openBox || false} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">User info</DialogTitle>\r\n            <DialogContent>\r\n                <Avatar alt={userData.avatar} src={userData.avatar} className=\"userInfoAvatar\" />\r\n                <p>Fullname: {userData.fullName}</p>\r\n                <p>Email: {userData.email}</p>\r\n                <p>Status: {userData.status}</p>\r\n            </DialogContent>\r\n            {preloaderCondition ? <Preloader showonleft=\"true\" /> : null }\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                {currentUser.status === \"Admin\" && userData._id !== currentUser._id? \r\n                    <Button onClick={() => banHandler(userData._id)} color=\"primary\">\r\n                        Ban\r\n                    </Button>\r\n                : null}\r\n            </DialogActions>\r\n        </Dialog>\r\n}","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function BannedUser() {\r\n  const [open] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    // setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"ALERT!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Unfortunately you have benn banned from the chat. Please contact administrator to get more details. You will be redirected to the home page now.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, {useState, useEffect, useRef, useContext} from 'react';\r\nimport {Context} from '../../../store/Store';\r\nimport {actions} from '../../../reducers/actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SpringScrollbars from '../../../utils/ScrollBar';\r\nimport socket from '../../../utils/socket';\r\nimport {checkToken, removeToken} from '../../../utils/helpers';\r\nimport UserInfo from './Dialogs/UserInfo';\r\nimport BannedModal from './Dialogs/BannedUser';\r\nimport Preloader from '../../Helpers/Preloader';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    paddingTop: '5px'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'hidden'\r\n  }\r\n});\r\n\r\nconst Chat = () => {\r\n    const classes = useStyles();\r\n    const [state, dispatch] = useContext(Context);\r\n    const [users, setUsers] = useState(state.roomUsers);\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n    const [userID, setUserID] = useState('-');\r\n    const [currentUserID, serCurrentUserID] = useState(null);\r\n    const [userData, setUserData] = useState({\r\n        _id:'-',\r\n        fullName: '-',\r\n        email: '-',\r\n        status: '-',\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n    const [bannedDialog, showBannedDialog] = useState(false);\r\n    \r\n    window.onbeforeunload = () => {\r\n        const token = checkToken();\r\n        socket.emit('userExited', {\r\n            room: state.currentRoom._id,\r\n            token,\r\n            fullName: state.currentUser.fullName\r\n        });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(currentUserID === userID && !bannedDialog){\r\n            banUser();\r\n        }\r\n    },[currentUserID, userID]);\r\n\r\n    useEffect(() => {\r\n        setUsers(users => {\r\n            return state.roomUsers;\r\n        })\r\n    }, [state.roomUsers]);\r\n\r\n    useEffect(() => {\r\n        socketOnListeners();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setUserData(data => {\r\n            return state.currentUser\r\n        })\r\n        // serCurrentUserID(state.currentUser._id);\r\n    }, [state.currentUser]);\r\n\r\n    const handlerUnload = (e) => {\r\n        const token = checkToken();\r\n        socket.emit('userExited', {\r\n            room: state.currentRoom._id,\r\n            token,\r\n            fullName: state.currentUser.fullName\r\n        });\r\n        // setTrigger(false);\r\n    }\r\n\r\n\r\n    const banUser = () => {\r\n        showBannedDialog(true);\r\n        setTimeout(() => {\r\n            removeToken();\r\n        }, 5000);\r\n    }\r\n\r\n    const socketOnListeners = () => {\r\n\r\n        \r\n        socket.on(\"newUserArrived\", data => {\r\n            if(data.roomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers}); \r\n            }\r\n        });\r\n\r\n        socket.on(\"joinCompleted\", data => {\r\n            if (data.currentUser){\r\n                if(data.currentUser.banned) banUser();\r\n                serCurrentUserID(data.currentUser._id);\r\n                dispatch({type: actions.UPDATE_CURRENT_USER, payload: data.currentUser}); \r\n            }\r\n            if(data.roomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers}); \r\n            }\r\n        });\r\n\r\n        socket.on(\"userGone\", userID => {\r\n             dispatch({type: actions.USER_LEFT, payload: userID}); \r\n        });\r\n\r\n        socket.on('user-left-room', data => {\r\n            if(data.roomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers});\r\n            }\r\n        });\r\n\r\n         socket.on('userLeft', data => {\r\n            if(data.roomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers});\r\n            }\r\n        });\r\n\r\n        socket.on(\"room-changed\", data => {\r\n            if(data.roomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers});\r\n            }\r\n        });\r\n        \r\n        socket.on(\"room-changed-rest\", data => {\r\n            if(data.roomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers});\r\n            }\r\n        });\r\n\r\n        socket.on('userBanCompleted', data => {\r\n            setUserID(data.userID);\r\n            if(data.currentRoomUsers){\r\n                dispatch({type: actions.UPDATE_USERS_LIST, payload: data.currentRoomUsers});\r\n            }\r\n        });\r\n    }\r\n\r\n    const searchUserHandler = (e) => {\r\n        const fullName = e.target.value;\r\n        if(fullName){\r\n            const searchUsers = users.filter((el, id) => {\r\n                return el.fullName.toLowerCase().search(fullName.toLowerCase()) > -1;\r\n            })\r\n\r\n            if (searchUsers.length > 0) setSearchUsers(searchUsers);\r\n        }\r\n        else{\r\n            setSearchUsers([]);\r\n        }\r\n    }\r\n\r\n    const userHandler = (userID) => {\r\n        const clickedUser = users.filter((el, id) => {\r\n            return el._id === userID;\r\n        });\r\n        if(clickedUser.length > 0){\r\n            setUserData(clickedUser[0]);\r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    let usersList = (\r\n        <div className=\"roomsPreloader\">\r\n            <Preloader />\r\n        </div>\r\n    )\r\n    if(users.length > 0){\r\n        usersList = users.map((el, idx) => {\r\n                return <ListItem button key={el._id} id={el._id} onClick={() => userHandler(el._id)}>\r\n                            <ListItemIcon>\r\n                                <Avatar alt={el.fullName} src={el.avatar} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={el.fullName}>{el.fullName}</ListItemText>\r\n                        </ListItem>\r\n        });\r\n    }\r\n\r\n    if(searchUsers.length > 0){\r\n        usersList = searchUsers.map((el, idx) => {\r\n                return <ListItem button key={el._id} id={el._id} onClick={() => userHandler(el._id)}>\r\n                            <ListItemIcon>\r\n                                <Avatar alt={el.fullName} src={el.avatar} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={el.fullName}>{el.fullName}</ListItemText>\r\n                        </ListItem>\r\n        }); \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {bannedDialog ? <BannedModal /> : null}\r\n            <UserInfo \r\n                userData={userData}\r\n                currentUser={state.currentUser}\r\n                currentRoom={state.currentRoom}\r\n                openBox={open}\r\n                onClose={() => setOpen(false)}\r\n            />\r\n            <Grid container component={Paper} className={classes.chatSection}>\r\n                <Grid item xs={12} className={classes.borderRight500}>\r\n                    <Grid item xs={12} style={{padding: '10px'}}>\r\n                        <TextField id=\"outlined-basic-email\" onChange={searchUserHandler} label=\"Search user in room\" variant=\"outlined\" fullWidth />\r\n                    </Grid>\r\n                    <Divider />\r\n                    <SpringScrollbars\r\n                    autoHide={true}\r\n                    style={{ width: '100%', height: '78vh' }}>\r\n                        <List>\r\n                            {usersList}\r\n                        </List>\r\n                    </SpringScrollbars>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RightButtons from './RightButtons';\r\nimport Users from './Users';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: '#fff'\r\n  },\r\n});\r\n\r\n\r\nfunction RightSidebar() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container classes={{root: classes.root}} item xs={12} spacing={0}>\r\n            <div className=\"right-sidebar\">\r\n                <RightButtons />\r\n                <Users />\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RightSidebar;\r\n","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function MessageItem(props) {\r\n  const {data: {message, attachment, avatar, sender}, direction} = props;\r\n//process.env.REACT_APP_BACKEND_URL +\r\n  const date = moment().format('LT');\r\n\r\n  let messageBox;\r\n\r\n   let msg_attachment = null;\r\n   if(attachment){\r\n        msg_attachment = <div>\r\n            <a href={ '/server/images/' + attachment} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={ '/server/images/' + attachment} alt=\"Message Attachment\" className=\"messageItemAttachment\" />\r\n            </a>\r\n        </div> \r\n   }\r\n\r\n\r\n  if(direction === 'left'){\r\n      messageBox = (\r\n          <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit>\r\n            <ListItem align=\"left\" style={{padding: 0, marginBottom: 15}}>\r\n                {sender !== 'System' ?\r\n                <ListItemIcon>\r\n                    <Avatar alt=\"User avatar\" src={avatar} />\r\n                </ListItemIcon> : null}  \r\n                <ListItemText align=\"left\" className=\"messageItemTextCover\">\r\n                    <p className=\"messageHeadline\">{sender + ' - ' + date}</p>\r\n                    {msg_attachment ? <p>{msg_attachment}</p> : null}\r\n                    {message ?\r\n                        <p className=\"messageItemFrom\">\r\n                            <span>{message}</span>\r\n                        </p> : null\r\n                    }\r\n                </ListItemText>\r\n            </ListItem>\r\n          </Slide>\r\n      );\r\n  }\r\n  else if(direction === 'center'){\r\n      messageBox = (\r\n          <Slide direction=\"down\" in={true} mountOnEnter unmountOnExit>\r\n            <ListItem align=\"center\" style={{padding: 0, marginBottom: 15}}>\r\n                {sender !== 'System' ?\r\n                <ListItemIcon>\r\n                    <Avatar alt=\"User avatar\" src={avatar} />\r\n                </ListItemIcon> : null}  \r\n                <ListItemText align=\"center\" className=\"messageItemTextCover\">\r\n                    <p className=\"\">{sender + ' - ' + date}</p>\r\n                    {msg_attachment ? <p>{msg_attachment}</p> : null}\r\n                    {message ?\r\n                        <p>\r\n                            <span>{message}</span>\r\n                        </p> : null\r\n                    }\r\n                </ListItemText>\r\n            </ListItem>\r\n          </Slide>\r\n      );\r\n  }\r\n  else{\r\n      messageBox = (\r\n          <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit>\r\n            <ListItem align=\"right\" style={{padding: 0, marginBottom: 15}}>\r\n                <ListItemText align=\"right\" className=\"messageItemTextCover messageTo\">\r\n                    <p className=\"messageHeadline\">{sender + ' - ' + date}</p>\r\n                    {msg_attachment ? <div>{msg_attachment}</div> : null}\r\n                    {message ?\r\n                        <p className=\"messageItemTo\">\r\n                            <span>{message}</span>\r\n                        </p> : null\r\n                    }\r\n                </ListItemText>\r\n                <ListItemIcon style={{justifyContent:'flex-end'}}>\r\n                    <Avatar alt=\"User avatar\" src={avatar} />\r\n                </ListItemIcon>\r\n            </ListItem>\r\n          </Slide>\r\n      );\r\n  }\r\n\r\n\r\n  \r\n  return (\r\n    <ListItem style={{padding:0}}>\r\n        <Grid container style={{padding:0}}>\r\n            <Grid item xs={12}>\r\n                <List>\r\n                    {messageBox}\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst BackgroundAnimation = (props) => {\r\n    return <div className=\"follow-wrapper\">\r\n                <ul className=\"bg-bubbles\">\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n                </ul>\r\n            </div>\r\n}\r\n\r\nexport default BackgroundAnimation;","import React,{useState, useContext, useEffect} from 'react';\r\nimport MessageItem from './MessageItem';\r\nimport {Context} from '../../store/Store';\r\nimport socket from '../../utils/socket';\r\nimport {actions} from '../../reducers/actions';\r\nimport List from '@material-ui/core/List';\r\nimport SpringScrollbars from '../../utils/ScrollBar';\r\nimport message_sound from '../../message.ogg';\r\nimport BackgroundAnimation from './BackgroundAnimation';\r\n\r\n\r\nfunction MessageFrame() {\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    const [audio] = useState(new Audio(message_sound));\r\n    const [messages, setMessages] = useState([]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [currentMessage, setCurrentMessage] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if(playing){\r\n          audio.play();\r\n        }\r\n        else{\r\n           audio.pause();\r\n           audio.currentTime = 0;\r\n        }\r\n        setTimeout(() => {\r\n          setPlaying(false);\r\n        }, 3000);\r\n      },\r\n      [playing]\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n        socketOnListeners();\r\n    }, []);\r\n\r\n\r\n    const socketOnListeners = () => {\r\n\r\n      socket.on(\"joinCompleted\", data => {\r\n        dispatch({type: actions.UPDATE_CURRENT_USER, payload: data.currentUser});\r\n        setMessages(messages => [...messages, data]);\r\n      });\r\n\r\n      socket.on(\"newUserArrived\", data => {\r\n        setPlaying(true);\r\n        setMessages(messages => [...messages, data]);\r\n      });\r\n\r\n      socket.on(\"room-changed\", data => {\r\n        setMessages(messages => [data.message]);\r\n        dispatch({type: actions.NEW_ROOM, payload: data.room});\r\n      });\r\n\r\n      socket.on(\"room-changed-rest\", data => {\r\n        setMessages(messages => [...messages, data.message]);\r\n        dispatch({type: actions.NEW_ROOM, payload: data.room});\r\n        if(data.roomUsers){\r\n          dispatch({type: actions.UPDATE_USERS_LIST, payload: data.roomUsers});\r\n        }\r\n        \r\n      });\r\n\r\n      socket.on('newMsgSaved', data => {\r\n        setCurrentMessage(data.message)\r\n        setMessages(messages => {\r\n          if(messages.length > 1000) {\r\n            return [data];\r\n          }\r\n          else{\r\n            return [...messages, data]\r\n          }\r\n        });\r\n      });\r\n\r\n  \r\n      socket.on('user-left-room', data => {\r\n        setMessages(messages => [...messages, data.message]);\r\n      });\r\n\r\n      socket.on('userLeft', data => {\r\n        setMessages(messages => [...messages, data.message]);\r\n        dispatch({type: actions.UPDATE_USERS_LIST, payload: data.currentRoomUsers});\r\n      });\r\n\r\n      socket.on('userExit', data => {\r\n        setMessages(messages => [...messages, data]);\r\n      });\r\n\r\n      return () => socket.disconnect();\r\n\r\n    }\r\n\r\n    if(currentMessage && currentMessage.indexOf(state.currentUser.fullName) > -1 && !playing) {\r\n      setPlaying(true);\r\n      setCurrentMessage(null);\r\n      setTimeout(() => {\r\n        setPlaying(false);\r\n      }, 3000);\r\n    }\r\n\r\n    return (\r\n        <SpringScrollbars \r\n            autoHide={true}\r\n            scrolltobottom='1'\r\n            renderTrackHorizontal={props => <div {...props} className=\"track-horizontal\" style={{display:\"none\"}}/>}\r\n            renderThumbHorizontal={props => <div {...props} className=\"thumb-horizontal\" style={{display:\"none\"}}/>}\r\n            renderView={props => <div style={{padding: '0 25px 0 15px', ...props.style}} />}\r\n            style={{ width: '100%', height: '90vh' }}>\r\n            <List>\r\n              {messages.length > 5 ? <BackgroundAnimation /> : null }\r\n\r\n              {messages.length > 0 ? messages.map((el,idx) => {\r\n                  const userIndex = state.roomUsers.findIndex(x => x._id === el.user)\r\n                  let avatar = null;\r\n                  if(userIndex > -1){\r\n                    avatar = state.roomUsers[userIndex].avatar;\r\n                  }\r\n                  el.avatar = avatar;\r\n\r\n                  let direction = 'left';\r\n                  if(el.type === 'system'){\r\n                    direction = 'center';\r\n                  }\r\n                  else if(el.type === 'current'){\r\n                    direction = 'right';\r\n                  }\r\n                  return (\r\n                      <MessageItem key={idx} data={el} direction={direction} />\r\n                  );\r\n              }) : null}\r\n            </List>\r\n        </SpringScrollbars>\r\n    )\r\n}\r\n\r\nexport default MessageFrame;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function Notification(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [messageInfo, setMessageInfo] = React.useState(props.message ?? 'salam');\r\n\r\n\r\n\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setMessageInfo(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        key={'message-notification-key'}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        message={messageInfo ? messageInfo : 'salam'}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}","import React, {useState, useEffect, useContext, useRef} from 'react';\r\nimport {Context} from '../../store/Store';\r\n// import {actions} from '../../reducers/actions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n// import socket from '../../utils/socket';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Notification from '../Helpers/Notification';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    messageForm:{\r\n        width: '100%',\r\n    },\r\n    root:{\r\n        position: 'relative',\r\n        padding:'0 20px',\r\n        width: '100%',\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }\r\n}))\r\n\r\n\r\n\r\nfunction Input(props) {\r\n    const classes = useStyles();\r\n    const [message, setMessage] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [preview, setPreview] = useState('');\r\n    const [emoji, showEmoji] = useState(false);\r\n    const textInput = useRef(null);\r\n    const [state] = useContext(Context);\r\n    const [users, setUsers] = useState(state.roomUsers);\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n    const [openSuggestions, setOpenSuggestions] = useState(false);\r\n    const [errorNotification, setErrorNotification] = useState({show:false, message: ''});\r\n\r\n\r\n    useEffect(() => {\r\n        setUsers(users => {\r\n            return state.roomUsers;\r\n        })\r\n    }, [state.roomUsers]);\r\n\r\n\r\n    const messageHandler = (e) => {\r\n        let msg = e.target.value;\r\n        let lastLetter = msg[msg.length - 1];\r\n        if(lastLetter === ' ') setOpenSuggestions(false);\r\n        if(lastLetter === '@' && !openSuggestions){\r\n            setOpenSuggestions(true);\r\n        }\r\n        let lastAtPosition = msg.lastIndexOf('@');\r\n        if(lastAtPosition > -1){\r\n            // let lastSpacePosition = msg.lastIndexOf(' ');\r\n            const userString = msg.slice(lastAtPosition + 1);\r\n            if(userString){\r\n                const searchUsers = users.filter((el, id) => {\r\n                    return el.fullName.toLowerCase().search(userString.toLowerCase()) > -1;\r\n                })\r\n\r\n                if (searchUsers.length > 0) setSearchUsers(searchUsers);\r\n            }\r\n            else{\r\n                setSearchUsers([]);\r\n            }\r\n        }\r\n        \r\n        setMessage(msg);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(message || preview){\r\n            let msg = {\r\n                text: message,\r\n                attachment: null,\r\n            }\r\n            if(preview){\r\n                const data = new FormData();\r\n                data.append('file', file)\r\n                const uploadURL = process.env.REACT_APP_BACKEND_URL + '/upload';\r\n                axios.post(uploadURL, data)\r\n                .then(res => {\r\n                    if(res.status === 200){\r\n                        msg.attachment = res.data.filename;\r\n                        props.onSend(msg);\r\n                        setMessage('');\r\n                        setPreview('');\r\n                        setFile('');\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    let errorMessage = null;\r\n                    // console.log(e.response);\r\n                    if(e.response.data){\r\n                        // console.log(e.response.data.message);\r\n                        errorMessage= e.response.data.message;\r\n                    }\r\n                    else{\r\n                        errorMessage= 'Some error ocurred, please try again later';\r\n                    }\r\n\r\n                    setErrorNotification({\r\n                        show: true,\r\n                        message: errorMessage\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        setErrorNotification({\r\n                            show: false,\r\n                            message: false\r\n                        })\r\n                    }, 3000);\r\n                    \r\n                })\r\n            }\r\n            else{\r\n                props.onSend(msg);\r\n                setMessage('');\r\n                setPreview('');\r\n                setFile('');\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        \r\n        var file = e.target.files[0];\r\n        if(!file) return;\r\n\r\n        e.target.value = '';\r\n\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n\r\n        reader.onloadend = function (ev) {\r\n            setPreview(reader.result);\r\n            setFile(file);\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n    const resetImageHandler = (e) =>{\r\n        setPreview('');\r\n        setFile('');\r\n    }\r\n\r\n    const addEmoji = (e) => {\r\n        let sym = e.unified.split('-');\r\n        let codesArray = [];\r\n        sym.forEach(el => codesArray.push('0x' + el));\r\n        let emoji = String.fromCodePoint(...codesArray);\r\n        setMessage(message => message + ' ' + emoji);\r\n        showEmoji(false);\r\n        textInput.current.focus();\r\n    } \r\n\r\n    const addUsername = (fullName) => {\r\n\r\n        let lastAtPosition = message.lastIndexOf('@');\r\n        let modifiedMessage = message.slice(0, lastAtPosition + 1);\r\n        setMessage(modifiedMessage + fullName  + ' ');\r\n        textInput.current.focus();\r\n        setOpenSuggestions(false);\r\n\r\n    }\r\n\r\n\r\n    let userSuggestionsList = null;\r\n    if (users.length > 0) {\r\n        userSuggestionsList = users.map((el, idx) => {\r\n            return <li key={el._id} onClick={() => addUsername(el.fullName)}>{el.fullName}</li>\r\n        })\r\n    }\r\n\r\n    if(searchUsers.length > 0){\r\n        userSuggestionsList = searchUsers.map((el, idx) => {\r\n            return <li key={el._id} onClick={() => addUsername(el.fullName)}>{el.fullName}</li>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.messageForm} onSubmit={submitHandler} noValidate autoComplete=\"off\">\r\n            {errorNotification.show ? <Notification message={errorNotification.message} /> : null}\r\n            <Grid container item xs={12} classes={{root: classes.root}} spacing={0}>\r\n                <div className=\"attachment_cover\">\r\n                    {preview ? \r\n                        <React.Fragment>\r\n                            <CancelIcon className=\"remove-attachment\" onClick={resetImageHandler} />\r\n                            <img src={preview} className=\"attachment-preview\" alt=\"preview\" />\r\n                        </React.Fragment>\r\n                    : null}\r\n                </div>\r\n                {emoji ?\r\n                    <div className=\"emoji_cover\">\r\n                        <Picker set={\"google\"} showPreview={false} showSkinTones={false} onSelect={addEmoji} style={{ position: 'absolute', bottom: '60px', right: '20px' }} />\r\n                    </div> : null\r\n                }\r\n                <Grid container item xs={9} spacing={0}>\r\n                    {openSuggestions ?\r\n                        <ul className=\"suggestionsList\">\r\n                            {userSuggestionsList}\r\n                        </ul>\r\n                    : null}\r\n                    <TextField \r\n                        id=\"standard-basic\" \r\n                        inputRef={textInput} \r\n                        value={message} \r\n                        onChange={messageHandler} \r\n                        className=\"messageInput\" \r\n                        label=\"Message\" \r\n                    />\r\n                </Grid>\r\n                <Grid container item xs={3} spacing={0}>\r\n                    <input accept=\"image/*\" onChange={(e)=> handleImageChange(e)} className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n                    {/* <label htmlFor=\"icon-button-file\">\r\n                        <IconButton color=\"primary\" className={classes.button} aria-label=\"Upload picture\" component=\"span\">\r\n                            <PhotoCamera />\r\n                        </IconButton>\r\n                    </label> */}\r\n                    <IconButton color=\"primary\" className={classes.button} aria-label=\"Add emoji\" onClick={() => showEmoji(!emoji)}>\r\n                        <InsertEmoticonIcon />\r\n                    </IconButton>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={submitHandler}\r\n                    >\r\n                       <SendIcon>Send</SendIcon>\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MessageFrame from './MessageFrame';\r\nimport Input from './Input';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {checkToken} from '../../utils/helpers';\r\nimport socket from '../../utils/socket';\r\nimport {Context} from '../../store/Store';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n      padding:'0',\r\n  }\r\n}));\r\n\r\n\r\nexport default function ChatBox(props) {\r\n  const classes = useStyles();\r\n  const [state] = useContext(Context);\r\n  \r\n  const submitHandler = (msg) => {\r\n    const token = checkToken();\r\n    const data = {\r\n      room: state.currentRoom,\r\n      msg,\r\n      user: state.currentUser.fullName,\r\n      avatar:state.currentUser.avatar\r\n    }\r\n    socket.emit('newMsg', token, data);\r\n  }\r\n\r\n  return (\r\n    <Grid container item xs={12} classes={{root: classes.root}} spacing={0}>\r\n        <MessageFrame />\r\n        <Input onSend={submitHandler} />\r\n    </Grid>\r\n  );\r\n}","import React, {useState, useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LeftSidebar from './Sidebars/LeftSidebar/LeftSidebar';\r\nimport RightSidebar from './Sidebars/RightSidebar/RightSidebar';\r\nimport Chatbox from './ChatBox/ChatBox';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport {Context} from '../store/Store';\r\nimport socket from '../utils/socket';\r\nimport {actions} from '../reducers/actions';\r\nimport {checkToken} from '../utils/helpers';\r\nimport Notification from './Helpers/Notification';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const token = checkToken();\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useContext(Context);\r\n  const [notificationEnabled, showNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.emit('newUser', token);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    socketOnListeners();\r\n  }, []);\r\n\r\n  const socketOnListeners = () => {\r\n    socket.on(\"userUpdateSuccess\", data => {\r\n      showNotification(true);\r\n      setTimeout(() => {\r\n        showNotification(false);\r\n      }, 3000);\r\n    });\r\n  };\r\n\r\n  let messageFrameColumns = 8;\r\n  let leftSidebarColumns = 2;\r\n  let rightSidebarColumns = 2;\r\n  if(!state.leftSidebar && !state.rightSidebar){\r\n    messageFrameColumns = 10;\r\n    leftSidebarColumns = 1;\r\n    rightSidebarColumns = 1;\r\n  }\r\n  else if(!state.leftSidebar || !state.rightSidebar){\r\n    messageFrameColumns = 9;\r\n    if(!state.leftSidebar){\r\n      leftSidebarColumns = 1;\r\n      rightSidebarColumns = 2;\r\n    }\r\n    else{\r\n      leftSidebarColumns = 2;\r\n      rightSidebarColumns = 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {notificationEnabled ?\r\n        <Notification\r\n          message=\"User data updated\"\r\n         /> : null\r\n      }\r\n      <Grid container spacing={0} className=\"MessageFrameCover\">\r\n        <Grid container item xs={leftSidebarColumns} spacing={0}>\r\n          {state.leftSidebar ? <LeftSidebar /> : <DoubleArrowIcon color=\"primary\" className='leftSidebarButton' onClick={() => dispatch({type: actions.LEFT_SIDEBAR, payload: true})} />}\r\n        </Grid>\r\n        <Grid container item xs={messageFrameColumns} spacing={0}>\r\n          <Chatbox />\r\n        </Grid>\r\n        <Grid container item xs={rightSidebarColumns} spacing={0}>\r\n          {state.rightSidebar ? <RightSidebar /> : <PeopleIcon className='rightSidebarButton' onClick={() => dispatch({type: actions.RIGHT_SIDEBAR, payload: true})} />}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React  from 'react';\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport SignUp from './components/Auth/SignUp';\r\nimport Login from './components/Auth/Login';\r\nimport Main from './components/Main';\r\nimport Store from './store/Store';\r\n\r\nfunction App() {\r\n  const userToken = localStorage.getItem('chatUserToken');\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" exact>\r\n        {userToken ? <Store><Main /></Store> : <Login />}\r\n      </Route>\r\n      <Route path=\"/signup\" exact>\r\n        {userToken ? <Store><Main /></Store> : <SignUp />}\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Store>\r\n          {userToken ? <Main /> : <Login />}\r\n        </Store>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}